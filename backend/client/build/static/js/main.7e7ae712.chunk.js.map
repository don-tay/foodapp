{"version":3,"sources":["components/navigation/WelcomeTab.js","utils/Constants.js","components/navigation/HomeTab.js","components/navigation/HistoryTab.js","components/navigation/ProfileTab.js","components/navigation/RiderTab.js","components/navigation/StaffTab.js","components/navigation/ManagerTab.js","utils/UserContext.js","components/navigation/NavigationContainer.js","components/pages/WelcomePage.js","components/customers/ReviewsButton.js","components/customers/RestaurantCard.js","components/customers/AllRestaurants.js","components/customers/FoodItemSelector.js","components/customers/CheckoutButton.js","components/customers/RestaurantOrder.js","components/pages/Homepage.js","components/customers/NewReviewButton.js","components/customers/CustomerOrderCard.js","components/pages/HistoryPage.js","components/customers/EditableAccountForm.js","components/customers/RegisteredCardForm.js","components/pages/ProfilePage.js","components/riders/RiderOrderCard.js","components/pages/RiderActivityPage.js","components/riders/SummaryData.js","components/pages/RiderSummaryPage.js","components/pages/StaffSummaryPage.js","components/staffs/FoodItemEditor.js","components/staffs/NewItemButton.js","components/staffs/RestaurantMenu.js","components/pages/StaffMenuPage.js","components/managers/CustomerSummaryCard.js","components/managers/OrderSummaryCard.js","components/managers/RiderSummaryCard.js","components/pages/ManagerSummaryPage.js","components/managers/AllPromotionCard.js","components/managers/SavePromotion.js","components/managers/CreatePromotionButton.js","components/pages/ManagerPromotionPage.js","components/pages/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["WelcomeTab","props","Menu","Item","as","Link","to","name","active","window","location","pathname","content","onClick","onTabClick","HomeTab","HistoryTab","ProfileTab","RiderTab","useState","isExpanded","setExpanded","Accordion","link","Title","Content","StaffTab","ManagerTab","UserContext","createContext","uid","role","email","reload","NavigationContainer","signOut","children","sidebarOpened","setSidebarOpened","useContext","Sidebar","Pushable","animation","onHide","vertical","visible","Header","size","icon","textAlign","style","marginTop","Icon","Pusher","dimmed","borderless","fixed","height","overflow","WelcomePage","className","opacity","Container","profileImages","ReviewsButton","isModalOpened","setModalOpened","reviews","setReviews","useEffect","getReviews","url","rname","Axios","get","then","response","console","log","data","catch","error","Modal","open","onClose","trigger","Button","color","compact","Feed","map","value","index","image","Math","floor","random","length","Event","key","Label","src","Summary","User","Date","format","reviewdatetime","Extra","text","review","Actions","primary","categories","rating","promotions","RestaurantCard","restaurant","Card","fluid","raised","Image","imgurl","ui","maxHeight","setSelectedRestaurant","display","justifyContent","Rating","disabled","defaultRating","Description","minamt","Meta","join","AllRestaurants","restaurantsData","setRestaurantData","loading","setLoading","deliveryLocations","setDeliveryLocations","getDeliveryLocations","flexWrap","Input","placeholder","iconPosition","list","onChange","event","setLocation","id","Search","Segment","basic","Group","FoodItemSelector","count","setCount","price","toFixed","category","minValue","maxValue","limit","updateSelectedFoodItems","quantity","parseInt","CheckoutButton","isPayByCard","setPayByCard","cardNum","setCardNum","history","useHistory","status","cardnum","animated","Object","keys","selectedFoodItems","hidden","deliveryInfo","entries","selectedFoodItem","subtotal","deliveryFee","total","Radio","toggle","abs","orderTime","getUnixTime","riderUrl","riderIds","rid","parsedItems","chosenItems","hasOwnProperty","item","parsedItem","fname","qty","itemprice","push","post","dfee","odatetime","cid","paymethod","fprice","foodlist","makeOrder","RestaurantOrder","setTotal","setSubtotal","setSelectedFoodItems","restaurantFoodItems","setRestaurantFoodItems","start","addHours","startOfToday","end","processedData","forEach","processedItem","qtylefttoday","parseFloat","undefined","updateTotalPrice","labelPosition","type","widths","minWidth","divided","foodItem","Homepage","selectedRestaurant","NewReviewButton","setReview","Form","TextArea","reviewInfo","oid","CustomerOrderCard","order","getStatus","marginLeft","marginRight","maxRating","onRate","e","MaxRating","floated","secondary","items","HistoryPage","orders","setOrders","EditableAccountForm","isEditing","setEditing","newName","setNewName","newEmail","setNewEmail","password","setPassword","didUpdateSuccessfully","setUpdateSuccessfully","resetState","label","axios","put","localStorage","setItem","Message","success","RegisteredCardForm","newCardNum","setNewCardNum","inputLoading","setInputLoading","rewardPoints","setRewardPoints","rpoints","Statistic","Value","Loader","inline","ProfilePage","Grid","columns","stackable","Column","verticalAlign","alignItems","RiderOrderCard","departdatetime1","startDatetimeToRestaurant","setStartDatetimeToRestaurant","arrivedatetime","endDatetimeToRestaurant","setEndDatetimeToRestaurant","departdatetime2","startDatetimeToCustomer","setStartDatetimeToCustomer","deliverdatetime","endDatetimeToCustomer","setEndDatetimeToCustomer","receiveOrderCompleted","goToRestaurantCompleted","receivedFoodCompleted","deliverToCustomerCompleted","updateOrderTimestamp","timestamp","refreshOrders","float","cname","Step","ordered","completed","flexDirection","currentDatetime","RiderActivityPage","pair","SummaryData","setRiderSummary","setSalary","setSchedule","setRatings","url1","url2","url3","url4","url5","RiderSummaryPage","selectedMonths","setSelectedMonths","riderSalary","setRiderSalary","riderSchedule","setRiderSchedule","riderOrder","setRiderOrder","riderRatings","setRiderRatings","period","split","monthA","parse","monthB","isBefore","getPeriod","numMth","getMonth","numWk","round","marginInlineEnd","clearable","popupPosition","dateFormat","closable","maxDate","margin","filter","date","getFullYear","reduce","acc","curr","promoData","StaffSummaryPage","restaurantName","setRestaurantName","setPeriod","summaryInfo","setSummaryInfo","statisticsLoading","setStatisticsLoading","nameLoading","setNameLoading","onMonthInput","range","starttime","endtime","rsummary","fetchSummaryInfo","startOfMonth","endOfMonth","getTotalRevenue","totalrevenue","getTotalOrders","ordercount","popularFood","popularitems","months","differenceInCalendarMonths","getAvgMonthlyRevenue","weeks","differenceInCalendarWeeks","getAvgWeeklyRevenue","getAvgMonthlyOrders","getAvgWeeklyOrders","sum","promo","FoodItemEditor","updateFoodItem","newPrice","Number","transparent","newCategory","newImgurl","toString","newLimit","deleteFoodItem","NewItemButton","setName","setPrice","setCategory","setLimit","setImgurl","isValid","onOpen","createFoodItem","RestaurantMenu","saveChanges","setSaveChanges","minAmt","setMinAmt","fetchData","clone","affectedItem","itemClone","menu","delete","getChanges","updatedItems","updatedItem","cat","flimit","header","updatedData","foodLimitPrice","Field","newMinAmt","StaffMenuPage","CustomerSummaryCard","href","totalpayment","OrderSummaryCard","RiderSummaryCard","totalsalary","hours","noorder","avgdelivertime","norating","avgrating","ManagerSummaryPage","riderSummary","customerSummary","setCustomerSummary","overviewSummary","setOverviewSummary","loading1","setLoading1","overview","setOverviewOn","viewCustomers","setViewCustomerOn","viewOrders","setViewOrderOn","viewRiders","setViewRiderOn","overviewsummary","cusstarttime","cusendtime","fdssummary","getCustomerSummary","getRiderSummary","goodcustomers","toplocations","topriders","newcustomers","completedorders","orderscost","customerorders","orderlocations","avg","riderinfo","totalcustomers","totalorders","totalcompletedorders","totalcost","PromotionCard","checkTime","now","edatetime","sdatetime","pid","fontWeight","getPromoStatus","discount","toPrecision","getDescription","SavePromotion","value1","value2","value3","setCreateError","setCreateSuccessfully","CreatePromotionButton","startdate","setStartdate","enddate","setEnddate","setDiscount","didCreateSuccessfully","createError","setToggle","isChecked","setChecked","finalDiscount","epochStartDate","getTime","epochEndDate","Checkbox","toggleCheckBox","checked","ManagerPromotionPage","promotionsData","setPromotionData","AllPromotionCard","LoginPage","signingUp","setSigningUp","setEmail","newRole","setNewRole","riderType","setRiderType","setRestaurant","toggleRegister","relaxed","postRequest","isFT","login","fontSize","App","setUid","setRole","loadFromLocalStorage","getItem","Provider","clear","path","exact","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7e7ae712.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\nimport { ROOT_PATH } from \"../../utils/Constants\";\n\nfunction WelcomeTab(props) {\n  return (\n    <Menu.Item\n      as={Link}\n      to={ROOT_PATH}\n      name={ROOT_PATH}\n      active={window.location.pathname === ROOT_PATH}\n      content=\"Home\"\n      onClick={props.onTabClick}\n    />\n  );\n}\n\nexport default WelcomeTab;\n","export const ROOT_PATH = \"/\";\r\nexport const HOME_PATH = \"/home\";\r\nexport const HISTORY_PATH = \"/history\";\r\nexport const PROFILE_PATH = \"/profile\";\r\nexport const STAFF_SUMMARY_PATH = \"/staff/summary\";\r\nexport const STAFF_MENU_PATH = \"/staff/menu\";\r\nexport const RIDER_SUMMARY_PATH = \"/rider/summary\";\r\nexport const RIDER_ACTIVITY_PATH = \"/rider/activity\";\r\nexport const MANAGER_SUMMARY_PATH = \"/manager/summary\";\r\nexport const MANAGER_PROMOTION_PATH = \"/manager/promotion\";\r\n\r\nexport const CUSTOMER = 0;\r\nexport const STAFF = 1;\r\nexport const RIDER = 2;\r\nexport const MANAGER = 3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { HOME_PATH } from \"../../utils/Constants\";\r\n\r\nfunction HomeTab(props) {\r\n  return (\r\n    <Menu.Item\r\n      as={Link}\r\n      to={HOME_PATH}\r\n      name={HOME_PATH}\r\n      active={window.location.pathname === HOME_PATH}\r\n      content=\"Food\"\r\n      onClick={props.onTabClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HomeTab;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { HISTORY_PATH } from \"../../utils/Constants\";\r\n\r\nfunction HistoryTab(props) {\r\n  return (\r\n    <Menu.Item\r\n      as={Link}\r\n      to={HISTORY_PATH}\r\n      name={HISTORY_PATH}\r\n      active={window.location.pathname === HISTORY_PATH}\r\n      content=\"History\"\r\n      onClick={props.onTabClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default HistoryTab;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { PROFILE_PATH } from \"../../utils/Constants\";\r\n\r\nfunction ProfileTab(props) {\r\n  return (\r\n    <Menu.Item\r\n      as={Link}\r\n      to={PROFILE_PATH}\r\n      name={PROFILE_PATH}\r\n      active={window.location.pathname === PROFILE_PATH}\r\n      content=\"Profile\"\r\n      onClick={props.onTabClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProfileTab;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Accordion } from \"semantic-ui-react\";\r\nimport { RIDER_ACTIVITY_PATH, RIDER_SUMMARY_PATH } from \"../../utils/Constants\";\r\n\r\nfunction RiderTab(props) {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <Accordion as={Menu.Item} link>\r\n      <Accordion.Title\r\n        onClick={() => setExpanded(!isExpanded)}\r\n        active={isExpanded}\r\n      >\r\n        Rider\r\n      </Accordion.Title>\r\n      <Accordion.Content active={isExpanded}>\r\n        <Menu.Item\r\n          as={Link}\r\n          to={RIDER_ACTIVITY_PATH}\r\n          name={RIDER_ACTIVITY_PATH}\r\n          active={window.location.pathname === RIDER_ACTIVITY_PATH}\r\n          content=\"Activity\"\r\n          onClick={props.onTabClick}\r\n        />\r\n        <Menu.Item\r\n          as={Link}\r\n          to={RIDER_SUMMARY_PATH}\r\n          name={RIDER_SUMMARY_PATH}\r\n          active={window.location.pathname === RIDER_SUMMARY_PATH}\r\n          content=\"Summary\"\r\n          onClick={props.onTabClick}\r\n        />\r\n      </Accordion.Content>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default RiderTab;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Accordion } from \"semantic-ui-react\";\r\nimport { STAFF_MENU_PATH, STAFF_SUMMARY_PATH } from \"../../utils/Constants\";\r\n\r\nfunction StaffTab(props) {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <Accordion as={Menu.Item} link>\r\n      <Accordion.Title\r\n        onClick={() => setExpanded(!isExpanded)}\r\n        active={isExpanded}\r\n      >\r\n        Staff\r\n      </Accordion.Title>\r\n      <Accordion.Content active={isExpanded}>\r\n        <Menu.Item\r\n          as={Link}\r\n          to={STAFF_MENU_PATH}\r\n          name={STAFF_MENU_PATH}\r\n          active={window.location.pathname === STAFF_MENU_PATH}\r\n          content=\"Menu\"\r\n          onClick={props.onTabClick}\r\n        />\r\n        <Menu.Item\r\n          as={Link}\r\n          to={STAFF_SUMMARY_PATH}\r\n          name={STAFF_SUMMARY_PATH}\r\n          active={window.location.pathname === STAFF_SUMMARY_PATH}\r\n          content=\"Summary\"\r\n          onClick={props.onTabClick}\r\n        />\r\n      </Accordion.Content>\r\n\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default StaffTab;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Accordion } from \"semantic-ui-react\";\r\nimport {\r\n  MANAGER_SUMMARY_PATH,\r\n  MANAGER_PROMOTION_PATH,\r\n} from \"../../utils/Constants\";\r\n\r\nfunction ManagerTab(props) {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <Accordion as={Menu.Item} link>\r\n      <Accordion.Title\r\n        onClick={() => setExpanded(!isExpanded)}\r\n        active={isExpanded}\r\n      >\r\n        Manager\r\n      </Accordion.Title>\r\n      <Accordion.Content active={isExpanded}>\r\n        <Menu.Item\r\n          as={Link}\r\n          to={MANAGER_PROMOTION_PATH}\r\n          name={MANAGER_PROMOTION_PATH}\r\n          active={window.location.pathname === MANAGER_PROMOTION_PATH}\r\n          content=\"Promotions\"\r\n          onClick={props.onTabClick}\r\n        />\r\n        <Menu.Item\r\n          as={Link}\r\n          to={MANAGER_SUMMARY_PATH}\r\n          name={MANAGER_SUMMARY_PATH}\r\n          active={window.location.pathname === MANAGER_SUMMARY_PATH}\r\n          content=\"Summary\"\r\n          onClick={props.onTabClick}\r\n        />\r\n      </Accordion.Content>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default ManagerTab;\r\n","import { createContext } from \"react\";\n\nconst UserContext = createContext({\n  uid: null,\n  role: null,\n  name: null,\n  email: null,\n  reload: null,\n});\n\nexport default UserContext;\n","import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Sidebar, Menu, Header, Icon } from \"semantic-ui-react\";\r\nimport WelcomeTab from \"./WelcomeTab\";\r\nimport HomeTab from \"./HomeTab\";\r\nimport HistoryTab from \"./HistoryTab\";\r\nimport ProfileTab from \"./ProfileTab\";\r\nimport RiderTab from \"./RiderTab\";\r\nimport StaffTab from \"./StaffTab\";\r\nimport ManagerTab from \"./ManagerTab\";\r\nimport UserContext from \"utils/UserContext\";\r\nimport { CUSTOMER, STAFF, RIDER, MANAGER } from \"utils/Constants\";\r\n\r\nfunction NavigationContainer({ signOut, children }) {\r\n  const [sidebarOpened, setSidebarOpened] = useState(false);\r\n  const { role } = useContext(UserContext);\r\n\r\n  const onTabClick = () => {\r\n    setSidebarOpened(false);\r\n  };\r\n\r\n  return (\r\n    <Sidebar.Pushable>\r\n      <Sidebar\r\n        as={Menu}\r\n        animation=\"push\"\r\n        onHide={() => setSidebarOpened(false)}\r\n        vertical\r\n        visible={sidebarOpened}\r\n      >\r\n        <Header\r\n          size=\"large\"\r\n          icon\r\n          textAlign=\"center\"\r\n          style={{ marginTop: \"1rem\" }}\r\n        >\r\n          <Icon name=\"truck\" />\r\n          Food Truck\r\n        </Header>\r\n        <WelcomeTab onTabClick={onTabClick} />\r\n        {role === CUSTOMER && <HomeTab onTabClick={onTabClick} />}\r\n        {role === CUSTOMER && <HistoryTab onTabClick={onTabClick} />}\r\n        <ProfileTab onTabClick={onTabClick} />\r\n        {role === RIDER && <RiderTab onTabClick={onTabClick} />}\r\n        {role === STAFF && <StaffTab onTabClick={onTabClick} />}\r\n        {role === MANAGER && <ManagerTab onTabClick={onTabClick} />}\r\n        <Menu.Item content=\"Sign Out\" link onClick={signOut} />\r\n      </Sidebar>\r\n\r\n      <Sidebar.Pusher dimmed={sidebarOpened}>\r\n        <Menu borderless size=\"huge\" fixed=\"top\">\r\n          <Menu.Item onClick={() => setSidebarOpened(true)} icon=\"sidebar\" />\r\n        </Menu>\r\n        <div style={{ height: \"100vh\", overflow: \"auto\" }}>{children}</div>\r\n      </Sidebar.Pusher>\r\n    </Sidebar.Pushable>\r\n  );\r\n}\r\n\r\nNavigationContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default NavigationContainer;\r\n","import React, { useContext } from \"react\";\nimport { Menu, Container, Icon } from \"semantic-ui-react\";\nimport UserContext from \"utils/UserContext\";\n\nfunction WelcomePage() {\n  const { name } = useContext(UserContext);\n\n  return (\n    <main className=\"welcome-page\">\n      <Menu size=\"huge\" style={{ opacity: 0 }} />\n      <Container textAlign=\"center\">\n        <h1>Welcome {name} to</h1>\n        <Icon size=\"massive\" name=\"truck\" />\n        <h1>Food Truck</h1>\n      </Container>\n      <br />\n      <br />\n      <br />\n    </main>\n  );\n}\n\nexport default WelcomePage;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Feed } from \"semantic-ui-react\";\nimport { format } from \"date-fns\";\nimport Axios from \"axios\";\n\nconst data = [\n  {\n    name: \"Alex\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Tom\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jeremy\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Xavier\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Ash\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"James\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Yves\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n  {\n    name: \"Jamie\",\n    reviewDatetime: 1588486582,\n    review: \"Great food\",\n  },\n];\n\nconst profileImages = [\n  \"elliot.jpg\",\n  \"helen.jpg\",\n  \"jenny.jpg\",\n  \"joe.jpg\",\n  \"justen.jpg\",\n  \"laura.jpg\",\n];\n\nfunction ReviewsButton(props) {\n  const [isModalOpened, setModalOpened] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews();\n  }, []);\n\n  const getReviews = () => {\n    const url = `http://localhost:5000/api/restaurants/'${props.rname}'/reviews`;\n    Axios.get(url)\n      .then((response) => {\n        console.log(`Get reviews for ${props.rname}`, response.data);\n        setReviews(response.data);\n      })\n      .catch((error) => {\n        console.log(`Error retrieving reviews for ${props.rname}, error`);\n      });\n  };\n\n  return (\n    <Modal\n      open={isModalOpened}\n      size=\"small\"\n      onClose={() => setModalOpened(false)}\n      trigger={\n        <Button\n          color=\"teal\"\n          onClick={() => setModalOpened(true)}\n          content=\"Reviews\"\n          compact\n        />\n      }\n    >\n      <Modal.Header>{props.rname} Reviews</Modal.Header>\n\n      <Modal.Content>\n        <Feed>\n          {reviews.map((value, index) => {\n            let image =\n              profileImages[Math.floor(Math.random() * profileImages.length)];\n            return (\n              <Feed.Event key={index}>\n                <Feed.Label>\n                  <img\n                    src={`https://react.semantic-ui.com/images/avatar/small/${image}`}\n                  />\n                </Feed.Label>\n                <Feed.Content>\n                  <Feed.Summary>\n                    <Feed.User>{value.name}</Feed.User> reviewed on\n                    <Feed.Date>\n                      {format(\n                        value.reviewdatetime * 1000,\n                        \"MM/dd/yyyy hh:mm aa\"\n                      )}\n                    </Feed.Date>\n                  </Feed.Summary>\n                  <Feed.Extra text>{value.review}</Feed.Extra>\n                </Feed.Content>\n              </Feed.Event>\n            );\n          })}\n        </Feed>\n      </Modal.Content>\n\n      <Modal.Actions>\n        <Button\n          primary\n          content=\"Done\"\n          onClick={() => {\n            setModalOpened(false);\n          }}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default ReviewsButton;\n","import React from \"react\";\nimport { Card, Image, Rating, Button } from \"semantic-ui-react\";\nimport \"styles/reactive.scss\";\nimport ReviewsButton from \"./ReviewsButton\";\n\nconst data = {\n  name: \"Toast Box (West Coast Plaza)\",\n  categories: [\"Asian\", \"Noodle\", \"Soup\"],\n  rating: 4.5,\n  promotions: [\"10% off all users\", \"$7 off first-time users\"],\n};\n\nfunction RestaurantCard(props) {\n  const restaurant = props.restaurant;\n\n  return (\n    <Card fluid raised className=\"reactive-card\" onClick={() => {}}>\n      <Image\n        src={restaurant.imgurl}\n        ui=\"false\"\n        style={{ maxHeight: \"25vh\" }}\n        onClick={() => props.setSelectedRestaurant(restaurant.rname)}\n      />\n      <Card.Content>\n        <Card.Header\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          onClick={() => props.setSelectedRestaurant(restaurant.rname)}\n        >\n          {restaurant.rname}\n          <span>\n            {data.rating} <Rating icon=\"star\" disabled defaultRating=\"1\" />\n          </span>\n        </Card.Header>\n\n        <Card.Description>\n          Minimum order amount: ${restaurant.minamt}\n        </Card.Description>\n\n        <Card.Meta style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {restaurant.categories.join(\", \")}\n\n          <ReviewsButton rname={restaurant.rname} />\n        </Card.Meta>\n\n        <br />\n        <Card.Description\n          onClick={() => props.setSelectedRestaurant(restaurant.rname)}\n        >\n          $3.99 delivery fee\n          {data.promotions.map((value) => {\n            return (\n              <>\n                <br />\n                <strong style={{ color: \"#0d97ff\" }}>{value}</strong>\n              </>\n            );\n          })}\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default RestaurantCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Card, Search, Input, Segment } from \"semantic-ui-react\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport \"styles/AllRestaurants.scss\";\nimport Axios from \"axios\";\nimport UserContext from \"utils/UserContext\";\n\nfunction AllRestaurants(props) {\n  const [restaurantsData, setRestaurantData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [deliveryLocations, setDeliveryLocations] = useState([]);\n  const { uid } = useContext(UserContext);\n\n  useEffect(() => {\n    const url = `http://localhost:5000/api/restaurants`;\n    Axios.get(url)\n      .then((response) => {\n        console.log(\"response\", response.data);\n        setRestaurantData(response.data);\n        setLoading(false);\n        getDeliveryLocations();\n      })\n      .catch((error) => {\n        console.log(\"Error retrieving restaurants:\", error);\n      });\n  }, []);\n\n  const getDeliveryLocations = () => {\n    const url = `http://localhost:5000/api/customers/${uid}/locations`;\n    Axios.get(url)\n      .then((response) => {\n        console.log(\"Fetch recent delivery locations\", response.data);\n        setDeliveryLocations(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Unable to fetch recent delivery locations\", error);\n      });\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <h1>Restaurants</h1>\n        <span>\n          <Input\n            className=\"rounded-input\"\n            placeholder=\"Enter location...\"\n            iconPosition=\"left\"\n            icon=\"location arrow\"\n            value={props.location}\n            list=\"orderLocations\"\n            onChange={(event, data) => {\n              props.setLocation(data.value);\n            }}\n          />\n          <datalist id=\"orderLocations\">\n            {deliveryLocations.map((value) => {\n              return <option value={value.location} />;\n            })}\n          </datalist>\n        </span>\n        <span>\n          <Search placeholder=\"Search category...\" />\n        </span>\n      </div>\n\n      {props.location ? (\n        loading ? (\n          <Segment\n            size=\"massive\"\n            basic\n            placeholder\n            loading={loading}\n            textAlign=\"center\"\n          />\n        ) : (\n          <Card.Group>\n            {restaurantsData.map((value, index) => {\n              return (\n                <RestaurantCard\n                  key={index}\n                  restaurant={value}\n                  setSelectedRestaurant={props.setSelectedRestaurant}\n                />\n              );\n            })}\n          </Card.Group>\n        )\n      ) : (\n        <Segment\n          size=\"massive\"\n          basic\n          placeholder\n          textAlign=\"center\"\n          content=\"You have not selected a location\"\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllRestaurants;\n","import React, { useState } from \"react\";\nimport { Item, Label } from \"semantic-ui-react\";\nimport NumberInput from \"semantic-ui-react-numberinput\";\nimport \"styles/FoodItem.scss\";\n\nfunction FoodItemSelector(props) {\n  const [count, setCount] = useState(\"0\");\n\n  return (\n    <Item>\n      <Item.Image src={props.imgurl} />\n\n      <Item.Content>\n        <Item.Header\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          {props.name}\n          <span>${props.price.toFixed(2)}</span>\n        </Item.Header>\n        <Item.Extra>\n          <Label>{props.category}</Label>\n        </Item.Extra>\n        <Item.Extra>\n          <NumberInput\n            minValue={0}\n            maxValue={props.limit}\n            value={count}\n            onChange={(value) => {\n              setCount(value);\n              props.updateSelectedFoodItems({\n                name: props.name,\n                quantity: parseInt(value),\n                price: props.price,\n              });\n            }}\n            className=\"number-input\"\n          />\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport default FoodItemSelector;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Icon, Modal, Header, Radio } from \"semantic-ui-react\";\nimport Axios from \"axios\";\nimport { getUnixTime } from \"date-fns\";\nimport UserContext from \"utils/UserContext\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CheckoutButton(props) {\n  const [isModalOpened, setModalOpened] = useState(false);\n  const [isPayByCard, setPayByCard] = useState(0);\n  const [cardNum, setCardNum] = useState();\n  const { uid } = useContext(UserContext);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    Axios.get(`http://localhost:5000/api/customers/${uid}`)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          let { cardnum } = response.data;\n          setCardNum(cardnum ?? \"\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const makeOrder = () => {\n    setLoading(true);\n    console.log(\"selected food items\", props.selectedFoodItems);\n    let orderTime = getUnixTime(new Date());\n\n    //Get list of riders working at this time\n    const riderUrl = `http://localhost:5000/api/riders/order?time=${orderTime}`;\n    Axios.get(riderUrl)\n      .then((response) => {\n        let riderIds = response.data.rid;\n        if (riderIds.length == 0) {\n          console.log(\"No riders available at this time!\");\n          console.log(\"Assigning to default rider:\");\n        }\n        console.log(\"Riders available:\", riderIds);\n        let chosenRider = 127;\n        let parsedItems = [];\n        let chosenItems = props.selectedFoodItems;\n        for (var key in chosenItems) {\n          if (chosenItems.hasOwnProperty(key)) {\n            let item = chosenItems[key];\n            let parsedItem = {};\n            parsedItem.fname = `'${item.name}'`;\n            parsedItem.qty = `${item.quantity}`;\n            parsedItem.itemprice = `${item.price}`;\n            parsedItems.push(parsedItem);\n          }\n        }\n        console.log(parsedItems);\n        const url = `http://localhost:5000/api/orders`;\n        Axios.post(url, {\n          location: `'${props.deliveryInfo.location}'`,\n          dfee: `'${props.deliveryInfo.deliveryFee}'`,\n          odatetime: `${orderTime}`,\n          cid: `${uid}`,\n          paymethod: `${isPayByCard}`,\n          rname: `'${props.restaurant}'`,\n          fprice: `${props.subtotal}`,\n          rid: `${chosenRider}`,\n          foodlist: parsedItems,\n        })\n          .then((response) => {\n            console.log(\"'Successfully created order\", response);\n            setLoading(false);\n            history.push(\"/history\");\n          })\n          .catch((error) => {\n            setLoading(false);\n            console.log(\"Error occured while making an order\", error);\n          });\n      })\n      .catch((error) => {\n        console.log(\"Unable to get riders working at this time:\", error);\n      });\n  };\n\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isModalOpened}\n      onClose={() => setModalOpened(false)}\n      trigger={\n        <Button\n          animated=\"vertical\"\n          color=\"teal\"\n          disabled={Object.keys(props.selectedFoodItems).length === 0}\n          onClick={() => setModalOpened(true)}\n        >\n          <Button.Content hidden>Checkout</Button.Content>\n          <Button.Content visible>\n            <Icon name=\"shop\" />\n          </Button.Content>\n        </Button>\n      }\n    >\n      <Modal.Header>{props.restaurant}</Modal.Header>\n\n      <Modal.Content>\n        <Modal.Description>\n          <Header>Order Summary</Header>\n          <strong>Deliver to: {props.deliveryInfo.location}</strong>\n        </Modal.Description>\n      </Modal.Content>\n\n      <Modal.Content>\n        <Modal.Description>\n          {Object.entries(props.selectedFoodItems).map((value) => {\n            let name = value[0];\n            let selectedFoodItem = value[1];\n            return (\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                {`${selectedFoodItem.quantity}x ${name}`}\n                <span>\n                  $\n                  {(selectedFoodItem.quantity * selectedFoodItem.price).toFixed(\n                    2\n                  )}\n                </span>\n              </div>\n            );\n          })}\n        </Modal.Description>\n      </Modal.Content>\n\n      <Modal.Content>\n        <Modal.Description>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            Subtotal\n            <span>${props.subtotal}</span>\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            Delivery fee\n            <span>${props.deliveryInfo.deliveryFee.toFixed(2)}</span>\n          </div>\n          <br />\n          <strong>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              Total\n              <span>${props.total}</span>\n            </div>\n          </strong>\n        </Modal.Description>\n      </Modal.Content>\n\n      <Modal.Content>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {!cardNum ? `No registered card (pay by cash)` : `Pay by card`}\n          <span>\n            <Radio\n              toggle\n              disabled={!cardNum}\n              onClick={() => setPayByCard(Math.abs(isPayByCard - 1))}\n            ></Radio>\n          </span>\n        </div>\n      </Modal.Content>\n\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          content=\"Cancel\"\n          onClick={() => setModalOpened(false)}\n        />\n        <Button\n          color=\"green\"\n          content=\"Place Order\"\n          loading={loading}\n          onClick={() => {\n            makeOrder();\n            //setModalOpened(false)\n          }}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default CheckoutButton;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Icon, Label, Input, Item, Segment } from \"semantic-ui-react\";\nimport FoodItemSelector from \"./FoodItemSelector\";\nimport CheckoutButton from \"./CheckoutButton\";\nimport Axios from \"axios\";\nimport { startOfToday, addHours, getUnixTime } from \"date-fns\";\n\nconst data = [\n  {\n    name: \"Curry Chicken with Rice\",\n    price: 6.3,\n    category: \"Asian\",\n    limit: 5,\n  },\n  {\n    name: \"Dry Mee Siam\",\n    price: 5.6,\n    category: \"Malay\",\n    limit: 3,\n  },\n  {\n    name: \"Ice Milo\",\n    price: 1.3,\n    category: \"Drinks\",\n    limit: 10,\n  },\n  {\n    name: \"Fried Bee Hoon\",\n    price: 4.3,\n    category: \"Asian\",\n    limit: 8,\n  },\n  {\n    name: \"Lu Rou Fan\",\n    price: 7.99,\n    category: \"Asian\",\n    limit: 5,\n  },\n  {\n    name: \"Peanut Butter Thick Toast\",\n    price: 2.1,\n    category: \"Asian\",\n    limit: 10,\n  },\n];\n\nfunction RestaurantOrder(props) {\n  const [total, setTotal] = useState(0);\n  const [subtotal, setSubtotal] = useState(0);\n  const [selectedFoodItems, setSelectedFoodItems] = useState({});\n  const [restaurantFoodItems, setRestaurantFoodItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const rname = props.restaurant;\n  const start = getUnixTime(addHours(startOfToday(), 10)); //10am today\n  const end = getUnixTime(addHours(startOfToday(), 22)); //10pm today\n\n  useEffect(() => {\n    const url = `http://localhost:5000/api/restaurants/'${rname}'?start=${start}&end=${end}`;\n    Axios.get(url)\n      .then((response) => {\n        let processedData = [];\n        response.data.forEach((item) => {\n          let processedItem = {};\n          processedItem.name = item.fname;\n          processedItem.limit = parseInt(item.qtylefttoday);\n          processedItem.imgurl = item.imgurl;\n          processedItem.price = parseFloat(item.price);\n          processedItem.category = item.categories[0];\n          processedData.push(processedItem);\n        });\n        setRestaurantFoodItems(processedData);\n        setLoading(false);\n        console.log(\"Retrieved restaurant food items:\", processedData);\n      })\n      .catch((error) => {\n        console.log(rname);\n        console.log(\"Error retrieving restaurant items:\", error);\n      });\n  }, []);\n\n  /*\n  selectedFoodItems = {\n    <food name>: selectedFoodItem,\n    <food name>: selectedFoodItem,\n    ...\n  }\n\n  selectedFoodItem = {\n    name: string,\n    quantity: number,\n    price: number\n  }\n  */\n  const updateSelectedFoodItems = (selectedFoodItem) => {\n    if (selectedFoodItems[selectedFoodItem.name] === undefined) {\n      selectedFoodItems[selectedFoodItem.name] = selectedFoodItem;\n    } else if (selectedFoodItem.quantity <= 0) {\n      delete selectedFoodItems[selectedFoodItem.name];\n    } else {\n      selectedFoodItems[selectedFoodItem.name].quantity =\n        selectedFoodItem.quantity;\n    }\n\n    setSelectedFoodItems(selectedFoodItems);\n    updateTotalPrice();\n  };\n\n  const updateTotalPrice = () => {\n    let subtotal = 0;\n    for (let [key, value] of Object.entries(selectedFoodItems)) {\n      subtotal += value.quantity * value.price;\n    }\n\n    setSubtotal(subtotal);\n    setTotal(subtotal + props.deliveryInfo.deliveryFee);\n  };\n\n  return (\n    <>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <h1>{props.restaurant}</h1>\n        <span>\n          <Input labelPosition=\"left\" type=\"text\" fluid>\n            <Label basic>$</Label>\n            <input\n              disabled\n              style={{ opacity: \"1\" }}\n              value={subtotal.toFixed(2)}\n            />\n          </Input>\n\n          <Button.Group widths=\"2\" style={{ minWidth: \"20vw\" }}>\n            <CheckoutButton\n              subtotal={subtotal.toFixed(2)}\n              total={total.toFixed(2)}\n              restaurant={props.restaurant}\n              deliveryInfo={props.deliveryInfo}\n              selectedFoodItems={selectedFoodItems}\n            />\n\n            <Button\n              animated=\"fade\"\n              onClick={() => props.setSelectedRestaurant(\"\")}\n              color=\"red\"\n            >\n              <Button.Content visible>\n                <Icon name=\"close\" />\n              </Button.Content>\n              <Button.Content hidden content=\"Cancel\" />\n            </Button>\n          </Button.Group>\n        </span>\n      </div>\n      {loading ? (\n        <Segment\n          size=\"massive\"\n          basic\n          placeholder\n          loading={loading}\n          textAlign=\"center\"\n        />\n      ) : (\n        <Item.Group divided>\n          {restaurantFoodItems.map((foodItem, index) => {\n            return (\n              <FoodItemSelector\n                key={index}\n                name={foodItem.name}\n                price={foodItem.price}\n                category={foodItem.category}\n                limit={foodItem.limit}\n                count={0}\n                updateSelectedFoodItems={updateSelectedFoodItems}\n                imgurl={foodItem.imgurl}\n              />\n            );\n          })}\n        </Item.Group>\n      )}\n    </>\n  );\n}\n\nexport default RestaurantOrder;\n","import React, { useState } from \"react\";\r\nimport { Menu, Container } from \"semantic-ui-react\";\r\nimport AllRestaurants from \"components/customers/AllRestaurants\";\r\nimport RestaurantOrder from \"components/customers/RestaurantOrder\";\r\n\r\nfunction Homepage() {\r\n  const [selectedRestaurant, setSelectedRestaurant] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n\r\n  return (\r\n    <main className=\"homepage\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }} />\r\n      <Container>\r\n        {selectedRestaurant === \"\" ? (\r\n          <AllRestaurants\r\n            location={location}\r\n            setLocation={setLocation}\r\n            setSelectedRestaurant={setSelectedRestaurant}\r\n          />\r\n        ) : (\r\n          <RestaurantOrder\r\n            deliveryInfo={{\r\n              location: location,\r\n              deliveryFee: 3.99 // TODO: change to restaurant dfee wrt to user's location (will require request to backend)\r\n            }}\r\n            restaurant={selectedRestaurant}\r\n            setSelectedRestaurant={setSelectedRestaurant}\r\n          />\r\n        )}\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n ","import React, { useState } from \"react\";\nimport { Button, Label, Modal, Form } from \"semantic-ui-react\";\nimport { getUnixTime } from \"date-fns\";\nimport Axios from \"axios\";\n\nfunction NewReviewButton(props) {\n  const [isModalOpened, setModalOpened] = useState(false);\n  const [review, setReview] = useState(props.review);\n\n  const postOrEditReview = (reviewInfo) => {\n    const url = `http://localhost:5000/api/customers/review`;\n    console.log(reviewInfo);\n    Axios.post(url, reviewInfo)\n      .then((response) => {\n        console.log(\"Successfully added review\", response);\n      })\n      .catch((error) => {\n        console.log(\"Error adding review\", error);\n      });\n  };\n\n  return (\n    <Modal\n      open={isModalOpened}\n      onClose={() => setModalOpened(false)}\n      trigger={\n        <Button\n          as={Label}\n          color=\"teal\"\n          onClick={() => setModalOpened(true)}\n          content=\"Review\"\n          style={props.style}\n        />\n      }\n    >\n      <Modal.Header>Review for {props.rname}</Modal.Header>\n\n      <Modal.Content>\n        <Form>\n          <Form.TextArea\n            placeholder=\"Write your review...\"\n            value={review}\n            onChange={(event, data) => {\n              setReview(data.value);\n            }}\n          />\n        </Form>\n      </Modal.Content>\n\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          content=\"Cancel\"\n          onClick={() => setModalOpened(false)}\n        />\n        <Button\n          color=\"green\"\n          content=\"Submit\"\n          disabled={!review}\n          onClick={() => {\n            postOrEditReview({\n              review: `'${review}'`,\n              oid: props.oid,\n              reviewdatetime: getUnixTime(new Date()),\n            });\n            setModalOpened(false);\n          }}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default NewReviewButton;\n","import React, { useState } from \"react\";\nimport { Card, Button, Label, Rating } from \"semantic-ui-react\";\nimport { format } from \"date-fns\";\nimport NewReviewButton from \"./NewReviewButton\";\nimport Axios from \"axios\";\n\nfunction CustomerOrderCard(props) {\n  const [isExpanded, setExpanded] = useState(false);\n  const order = props.order;\n  const [rating, setRating] = useState(order.rating);\n\n  const getStatus = () => {\n    switch (order.status) {\n      case 0:\n        return [\"Processing\", \"yellow\"];\n      case 1:\n        return [\"Delivering\", \"blue\"];\n      case 2:\n        return [\"Delivered\", \"green\"];\n      case 3:\n        return [\"Cancelled\", \"grey\"];\n      default:\n        console.log(\"Unknown status\");\n        return [\"Unknown\", \"black\"];\n    }\n  };\n\n  const handleRate = (e, { rating, MaxRating }) => {\n    console.log(\"Rate clicked:\", rating);\n    const url = `http://localhost:5000/api/customers/rating`;\n    Axios.post(url, {\n      rating: `${rating}`,\n      oid: `${order.oid}`,\n    })\n      .then((response) => {\n        console.log(\"Successfully updated rating for order\", response);\n      })\n      .catch((error) => {\n        console.log(\"Error updating rating for order\", error);\n      });\n  };\n\n  return (\n    <Card fluid raised color={getStatus()[1]}>\n      <Card.Content>\n        <Card.Header\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          {order.rname}\n          <span>${(order.fprice + order.dfee).toFixed(2)}</span>\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Card.Description>\n          {format(order.odatetime * 1000, \"MM/dd/yyyy hh:mm aa\")}\n          <Label color={[getStatus()[1]]} style={{ marginLeft: \"1rem\" }}>\n            {getStatus()[0]}\n          </Label>\n\n          {order.status === 2 && (\n            <>\n              <NewReviewButton\n                style={{ marginLeft: \"1rem\", marginRight: \"1rem\" }}\n                oid={order.oid}\n                rname={order.rname}\n                review={order.review}\n              />\n              <Rating\n                icon=\"star\"\n                maxRating={5}\n                defaultRating={rating}\n                onRate={handleRate}\n              />\n            </>\n          )}\n\n          <Button\n            primary\n            floated=\"right\"\n            onClick={() => setExpanded(!isExpanded)}\n          >\n            {isExpanded ? \"View less\" : \"View more\"}\n          </Button>\n\n          {order.status < 2 && (\n            <Button secondary floated=\"right\" content=\"Cancel\" />\n          )}\n        </Card.Description>\n        {isExpanded && (\n          <Card.Description>\n            Order number: {order.oid}\n            <br />\n            Delivery address: {props.order.location}\n          </Card.Description>\n        )}\n      </Card.Content>\n      {isExpanded && (\n        <>\n          <Card.Content>\n            <Card.Description>\n              {order.items.map((value, index) => {\n                return (\n                  <div\n                    key={index}\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                  >\n                    {`${value.qty}x ${value.fname}`}\n                    <span>${(value.qty * value.price).toFixed(2)}</span>\n                  </div>\n                );\n              })}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content>\n            <Card.Description>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                Subtotal\n                <span>${order.fprice.toFixed(2)}</span>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                Delivery fee\n                <span>${order.dfee.toFixed(2)}</span>\n              </div>\n              <br />\n              <strong>\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  Total\n                  <span>${(order.fprice + order.dfee).toFixed(2)}</span>\n                </div>\n              </strong>\n            </Card.Description>\n          </Card.Content>\n        </>\n      )}\n    </Card>\n  );\n}\n\nexport default CustomerOrderCard;\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Menu, Container, Card, Segment } from \"semantic-ui-react\";\r\nimport OrderCard from \"components/customers/CustomerOrderCard\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"utils/UserContext\";\r\n\r\nconst data = [\r\n  {\r\n    oid: 12312,\r\n    fprice: 8.6,\r\n    location: \"18 College Ave E\",\r\n    dfee: 3.99,\r\n    rname: \"Toast Box (West Coast Plaza)\",\r\n    odatetime: 1588486582,\r\n    status: 2,\r\n    items: [\r\n      {\r\n        fname: \"Curry Chicken with Rice\",\r\n        qty: 1,\r\n        price: 6.3,\r\n      },\r\n      {\r\n        fname: \"Ice Milo\",\r\n        qty: 2,\r\n        price: 1.3,\r\n      },\r\n      {\r\n        fname: \"Teh\",\r\n        qty: 1,\r\n        price: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    oid: 12312,\r\n    fprice: 8.6,\r\n    location: \"18 College Ave E\",\r\n    dfee: 3.99,\r\n    rname: \"Toast Box (West Coast Plaza)\",\r\n    odatetime: 1588486582,\r\n    status: 1,\r\n    items: [\r\n      {\r\n        fname: \"Curry Chicken with Rice\",\r\n        qty: 1,\r\n        price: 6.3,\r\n      },\r\n      {\r\n        fname: \"Ice Milo\",\r\n        qty: 2,\r\n        price: 1.3,\r\n      },\r\n      {\r\n        fname: \"Teh\",\r\n        qty: 1,\r\n        price: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    oid: 12312,\r\n    fprice: 8.6,\r\n    location: \"18 College Ave E\",\r\n    dfee: 3.99,\r\n    rname: \"Toast Box (West Coast Plaza)\",\r\n    odatetime: 1588486582,\r\n    status: 0,\r\n    items: [\r\n      {\r\n        fname: \"Curry Chicken with Rice\",\r\n        qty: 1,\r\n        price: 6.3,\r\n      },\r\n      {\r\n        fname: \"Ice Milo\",\r\n        qty: 2,\r\n        price: 1.3,\r\n      },\r\n      {\r\n        fname: \"Teh\",\r\n        qty: 1,\r\n        price: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    oid: 12312,\r\n    fprice: 8.6,\r\n    location: \"18 College Ave E\",\r\n    dfee: 3.99,\r\n    rname: \"Toast Box (West Coast Plaza)\",\r\n    odatetime: 1588486582,\r\n    status: 3,\r\n    items: [\r\n      {\r\n        fname: \"Curry Chicken with Rice\",\r\n        qty: 1,\r\n        price: 6.3,\r\n      },\r\n      {\r\n        fname: \"Ice Milo\",\r\n        qty: 2,\r\n        price: 1.3,\r\n      },\r\n      {\r\n        fname: \"Teh\",\r\n        qty: 1,\r\n        price: 1,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction HistoryPage() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { uid } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    let url = `http://localhost:5000/api/customers/${uid}/orders`;\r\n    Axios.get(url)\r\n      .then((response) => {\r\n        console.log(\"response\", response.data);\r\n        // TODO: switch to load from api when db is populated\r\n        setOrders(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error retrieving past orders:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"history-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <h1>Past Orders</h1>\r\n\r\n        {loading ? (\r\n          <Segment\r\n            size=\"massive\"\r\n            basic\r\n            placeholder\r\n            loading={loading}\r\n            textAlign=\"center\"\r\n          />\r\n        ) : orders.length > 0 ? (\r\n          <Card.Group>\r\n            {orders.map((value, index) => {\r\n              console.log(orders);\r\n              return <OrderCard key={index} order={value} />;\r\n            })}\r\n          </Card.Group>\r\n        ) : (\r\n              <Segment\r\n                size=\"massive\"\r\n                basic\r\n                placeholder\r\n                textAlign=\"center\"\r\n                content=\"You have no past orders\"\r\n              />\r\n            )}\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Form, Header, Button, Message } from \"semantic-ui-react\";\nimport UserContext from \"utils/UserContext\";\nimport axios from \"axios\";\n\nconst passwordPlaceholder = \"password\";\n\nfunction EditableAccountForm() {\n  const { uid, name, email, reload } = useContext(UserContext);\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [didUpdateSuccessfully, setUpdateSuccessfully] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const resetState = () => {\n    setNewName(name);\n    setNewEmail(email);\n    setPassword(passwordPlaceholder);\n  };\n\n  useEffect(() => {\n    resetState();\n  }, []);\n\n  const onConfirm = () => {\n    setLoading(true);\n\n    axios\n      .put(`http://localhost:5000/api/users/${uid}`, {\n        name: newName,\n        email: newEmail,\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          setEditing(false);\n          setUpdateSuccessfully(true);\n          localStorage.setItem(\"name\", newName);\n          localStorage.setItem(\"email\", newEmail);\n          reload();\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <Form>\n        <Header>Account Information</Header>\n        <Form.Input\n          label=\"Name\"\n          icon=\"user\"\n          iconPosition=\"left\"\n          value={newName}\n          onChange={(event, data) => {\n            setNewName(data.value);\n          }}\n          disabled={!isEditing}\n        />\n        <Form.Input\n          label=\"Email\"\n          icon=\"mail\"\n          iconPosition=\"left\"\n          type=\"email\"\n          value={newEmail}\n          onChange={(event, data) => {\n            setNewEmail(data.value);\n          }}\n          disabled={!isEditing}\n        />\n        <Form.Input\n          label=\"Password\"\n          icon=\"lock\"\n          iconPosition=\"left\"\n          type={isEditing ? \"text\" : \"password\"}\n          value={password}\n          onChange={(event, data) => {\n            setPassword(data.value);\n          }}\n          disabled={!isEditing}\n        />\n        <Button.Group widths=\"2\">\n          <Button\n            content={isEditing ? \"Cancel\" : \"Edit\"}\n            secondary\n            onClick={() => {\n              !isEditing && setUpdateSuccessfully(false);\n              isEditing && resetState();\n              setEditing(!isEditing);\n            }}\n          />\n          <Button\n            content=\"Confirm\"\n            primary\n            disabled={!isEditing}\n            loading={loading}\n            onClick={onConfirm}\n          />\n        </Button.Group>\n      </Form>\n      {didUpdateSuccessfully && (\n        <Message success content=\"Successfully updated\" />\n      )}\n    </>\n  );\n}\n\nexport default EditableAccountForm;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Form,\n  Header,\n  Button,\n  Message,\n  Statistic,\n  Icon,\n  Loader,\n} from \"semantic-ui-react\";\nimport UserContext from \"utils/UserContext\";\nimport axios from \"axios\";\n\nfunction RegisteredCardForm() {\n  const { uid } = useContext(UserContext);\n  const [isEditing, setEditing] = useState(false);\n  const [cardNum, setCardNum] = useState(\"\");\n  const [newCardNum, setNewCardNum] = useState(\"\");\n  const [didUpdateSuccessfully, setUpdateSuccessfully] = useState(false);\n  const [inputLoading, setInputLoading] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [rewardPoints, setRewardPoints] = useState(\"\");\n\n  const resetState = () => {\n    setNewCardNum(cardNum);\n  };\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/customers/${uid}`)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          let { cardnum, rpoints } = response.data;\n          setCardNum(cardnum ?? \"\");\n          setNewCardNum(cardnum ?? \"\");\n          setRewardPoints(rpoints);\n        }\n        setInputLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const onConfirm = () => {\n    let cardnum = newCardNum === \"\" ? 0 : parseInt(newCardNum);\n    if (!(cardnum >= 0)) {\n      return;\n    }\n\n    setLoading(true);\n\n    axios\n      .put(`http://localhost:5000/api/customers/${uid}`, {\n        cardnum: cardnum,\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          setCardNum(newCardNum);\n          setEditing(false);\n          setUpdateSuccessfully(true);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <Form>\n        <Header>Reward Points</Header>\n        <Statistic size=\"small\">\n          <Statistic.Value>\n            {inputLoading ? <Loader active inline /> : rewardPoints}{\" \"}\n            <Icon name=\"star\" />\n          </Statistic.Value>\n        </Statistic>\n        <Header>Registered Card</Header>\n        <Form.Input\n          label=\"Card Number\"\n          icon=\"credit card\"\n          iconPosition=\"left\"\n          value={newCardNum}\n          onChange={(event, data) => setNewCardNum(data.value)}\n          disabled={!isEditing}\n          loading={inputLoading}\n        />\n        <Button.Group widths=\"2\">\n          <Button\n            content={isEditing ? \"Cancel\" : \"Edit\"}\n            secondary\n            onClick={() => {\n              !isEditing && setUpdateSuccessfully(false);\n              isEditing && resetState();\n              setEditing(!isEditing);\n            }}\n          />\n          <Button\n            content=\"Confirm\"\n            primary\n            disabled={!isEditing}\n            loading={loading}\n            onClick={onConfirm}\n          />\n        </Button.Group>\n      </Form>\n      {didUpdateSuccessfully && (\n        <Message success content=\"Successfully updated\" />\n      )}\n    </>\n  );\n}\n\nexport default RegisteredCardForm;\n","import React, { useContext } from \"react\";\r\nimport { Menu, Container, Segment, Grid } from \"semantic-ui-react\";\r\nimport EditableAccountForm from \"components/customers/EditableAccountForm\";\r\nimport RegisteredCardForm from \"components/customers/RegisteredCardForm\";\r\nimport UserContext from \"utils/UserContext\";\r\nimport { CUSTOMER } from \"utils/Constants\";\r\n\r\nfunction ProfilePage() {\r\n  const { role } = useContext(UserContext);\r\n\r\n  return (\r\n    <main className=\"profile-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <h1>Profile</h1>\r\n        <Segment raised>\r\n          <Grid columns={role === CUSTOMER ? 2 : 1} stackable>\r\n            <Grid.Column\r\n              verticalAlign=\"middle\"\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <EditableAccountForm />\r\n            </Grid.Column>\r\n            {role === CUSTOMER && (\r\n              <Grid.Column\r\n                verticalAlign=\"middle\"\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <RegisteredCardForm />\r\n              </Grid.Column>\r\n            )}\r\n          </Grid>\r\n        </Segment>\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useState } from \"react\";\nimport { Card, Step, Button } from \"semantic-ui-react\";\nimport { getUnixTime, format } from \"date-fns\";\nimport Axios from \"axios\";\n\nfunction RiderOrderCard(props) {\n  const [startDatetimeToRestaurant, setStartDatetimeToRestaurant] = useState(\n    //props.order.startDatetimeToRestaurant\n    props.order.departdatetime1\n  );\n  const [endDatetimeToRestaurant, setEndDatetimeToRestaurant] = useState(\n    // props.order.endDatetimeToRestaurant\n    props.order.arrivedatetime\n  );\n  const [startDatetimeToCustomer, setStartDatetimeToCustomer] = useState(\n    // props.order.startDatetimeToCustomer\n    props.order.departdatetime2\n  );\n  const [endDatetimeToCustomer, setEndDatetimeToCustomer] = useState(\n    // props.order.endDatetimeToCustomer\n    props.order.deliverdatetime\n  );\n\n  const [isExpanded, setExpanded] = useState(false);\n\n  const receiveOrderCompleted = startDatetimeToRestaurant != null;\n  const goToRestaurantCompleted = endDatetimeToRestaurant != null;\n  const receivedFoodCompleted = startDatetimeToCustomer != null;\n  const deliverToCustomerCompleted = endDatetimeToCustomer != null;\n\n  const updateOrderTimestamp = (type) => {\n    const url = `http://localhost:5000/api/orders/${props.order.oid}`\n    let timestamp = getUnixTime(new Date());\n    Axios.put(url, {\n      timestamp: `${timestamp}`,\n      type: `${type}`\n    })\n      .then((response) => {\n        console.log(\"Successfully updated status of order\", response.data)\n        props.refreshOrders();\n      })\n      .catch((error) => {\n        console.log(\"Error occured updating order status\", error)\n      })\n  }\n\n\n  console.log(props.order);\n  return (\n    <Card fluid raised>\n      <Card.Content>\n        <Card.Header>Order {props.order.oid}: {props.order.rname}</Card.Header>\n        <Card.Content style={{ float: \"left\" }}>\n          <Card.Description>\n            Time: {format(props.order.odatetime * 1000, \"MM/dd/yyyy hh:mm aa\")}</Card.Description>\n          <Card.Description>Customer: {props.order.cname}</Card.Description>\n          <Card.Description>Deliver to: {props.order.location}</Card.Description>\n        </Card.Content>\n        <Button\n          primary\n          floated=\"right\"\n          onClick={() => setExpanded(!isExpanded)}\n        >\n          {isExpanded ? \"View less\" : \"View more\"}\n        </Button>\n      </Card.Content>\n      {isExpanded && (\n        <>\n          <Card.Content>\n            <Card.Description>\n              {props.order.items.map((value, index) => {\n                return (\n                  <div\n                    key={index}\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                  >\n                    {`${value.qty}x ${value.fname}`}\n                    <span>${(value.qty * value.price).toFixed(2)}</span>\n                  </div>\n                );\n              })}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content>\n            <Card.Description>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                Subtotal\n                <span>${props.order.fprice.toFixed(2)}</span>\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                Delivery fee\n                <span>${props.order.dfee.toFixed(2)}</span>\n              </div>\n              <br />\n              <strong>\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                  Total\n                  <span>${(props.order.fprice + props.order.dfee).toFixed(2)}</span>\n                </div>\n              </strong>\n            </Card.Description>\n          </Card.Content>\n        </>\n      )}\n      <div>\n        <Step.Group ordered widths=\"4\">\n          <Step completed={receiveOrderCompleted}>\n            <Step.Content style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Step.Title>Depart for Restaurant</Step.Title>\n              <Button\n                style={{ marginTop: \"0.5em\", marginRight: \"0\" }}\n                compact\n                content=\"Accept\"\n                color=\"green\"\n                onClick={() => {\n                  let currentDatetime = new Date();\n                  updateOrderTimestamp(1);\n                  setStartDatetimeToRestaurant(getUnixTime(currentDatetime));\n                }}\n                disabled={receiveOrderCompleted}\n              />\n              {receiveOrderCompleted}\n\n              {receiveOrderCompleted && (\n                <Step.Description>\n                  Completed on:{\" \"}\n                  {format(\n                    startDatetimeToRestaurant * 1000,\n                    \"dd/MM/yyyy HH:mm:ss\"\n                  )}\n                </Step.Description>\n              )}\n            </Step.Content>\n          </Step>\n\n          <Step completed={goToRestaurantCompleted}>\n            <Step.Content style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Step.Title>Arrived at restaurant</Step.Title>\n              <Step.Description>\n                Collect customer's food from restaurant\n            </Step.Description>\n\n              {receiveOrderCompleted && (\n                <Button\n                  style={{ marginTop: \"0.5em\", marginRight: \"0\" }}\n                  compact\n                  content=\"Done\"\n                  color=\"green\"\n                  onClick={() => {\n                    let currentDatetime = new Date();\n                    updateOrderTimestamp(2);\n                    setEndDatetimeToRestaurant(getUnixTime(currentDatetime));\n                  }}\n                  disabled={goToRestaurantCompleted}\n                />\n              )}\n              {goToRestaurantCompleted && (\n                <Step.Description>\n                  Completed on:{\" \"}\n                  {format(endDatetimeToRestaurant * 1000, \"dd/MM/yyyy HH:mm:ss\")}\n                </Step.Description>\n              )}\n            </Step.Content>\n          </Step>\n\n          <Step completed={receivedFoodCompleted}>\n            <Step.Content style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Step.Title>Received food and left restaurant</Step.Title>\n              <Step.Description>\n                Food ready to be delivered to customer\n            </Step.Description>\n\n              {goToRestaurantCompleted && (\n                <Button\n                  style={{ marginTop: \"0.5em\", marginRight: \"0\" }}\n                  compact\n                  content=\"Done\"\n                  color=\"green\"\n                  onClick={() => {\n                    let currentDatetime = new Date();\n                    updateOrderTimestamp(3);\n                    setStartDatetimeToCustomer(getUnixTime(currentDatetime));\n                  }}\n                  disabled={receivedFoodCompleted}\n                />\n              )}\n\n              {receivedFoodCompleted && (\n                <Step.Description>\n                  Completed on:{\" \"}\n                  {format(startDatetimeToCustomer * 1000, \"dd/MM/yyyy HH:mm:ss\")}\n                </Step.Description>\n              )}\n            </Step.Content>\n          </Step>\n\n          <Step completed={deliverToCustomerCompleted}>\n            <Step.Content style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Step.Title>Deliver to customer</Step.Title>\n              <Step.Description>Go to the customer's location</Step.Description>\n\n              {receivedFoodCompleted && (\n                <Button\n                  style={{ marginTop: \"0.5em\", marginRight: \"0\" }}\n                  compact\n                  content=\"Done\"\n                  color=\"green\"\n                  onClick={() => {\n                    let currentDatetime = new Date();\n                    updateOrderTimestamp(4);\n                    setEndDatetimeToCustomer(getUnixTime(currentDatetime));\n                  }}\n                  disabled={deliverToCustomerCompleted}\n                />\n              )}\n\n              {deliverToCustomerCompleted && (\n                <Step.Description>\n                  Completed on:{\" \"}\n                  {format(endDatetimeToCustomer * 1000, \"dd/MM/yyyy HH:mm:ss\")}\n                </Step.Description>\n              )}\n            </Step.Content>\n          </Step>\n        </Step.Group>\n      </div>\n    </Card>\n  );\n}\n\nexport default RiderOrderCard;\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Menu, Container, Segment, Card } from \"semantic-ui-react\";\r\nimport RiderOrderCard from \"components/riders/RiderOrderCard\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"utils/UserContext\";\r\n\r\nconst order1 = {\r\n  oid: 43242342,\r\n  startDatetimeToRestaurant: null,\r\n  endDatetimeToRestaurant: null,\r\n  startDatetimeToCustomer: null,\r\n  endDatetimeToCustomer: null,\r\n  odatetime: 1588579582,\r\n};\r\n\r\nconst order2 = {\r\n  oid: 43242344,\r\n  startDatetimeToRestaurant: null,\r\n  endDatetimeToRestaurant: null,\r\n  startDatetimeToCustomer: null,\r\n  endDatetimeToCustomer: null,\r\n  odatetime: 1588579582,\r\n};\r\n\r\nconst order3 = {\r\n  oid: 43242341,\r\n  startDatetimeToRestaurant: null,\r\n  endDatetimeToRestaurant: null,\r\n  startDatetimeToCustomer: null,\r\n  endDatetimeToCustomer: null,\r\n  odatetime: 1588579582,\r\n};\r\n\r\n//const totalOrders = [order1, order2, order3];\r\n\r\nfunction RiderActivityPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [orders, setOrders] = useState({});\r\n  const { uid } = useContext(UserContext);\r\n\r\n  const refreshOrders = () => {\r\n    const url = `http://localhost:5000/api/riders/${uid}/orders`;\r\n    Axios.get(url)\r\n      .then((response) => {\r\n        console.log(`Fetch all orders for rider ${uid}`, response.data);\r\n        // load rider's current order if any or any lobang\r\n        // totalOrders.forEach(order => (orders[order.oid] = order));\r\n        // setOrders(orders);\r\n        let orders = {};\r\n        response.data.forEach((order) => (orders[order.oid] = order));\r\n        setOrders(orders);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching orders for rider\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"rider-activity-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <h1>Activity</h1>\r\n        {Object.keys(orders).length > 0 ? (\r\n          <Card.Group>\r\n            {Object.entries(orders).map((pair) => {\r\n              let order = pair[1];\r\n              return (\r\n                <RiderOrderCard refreshOrders={refreshOrders} order={order} />\r\n              );\r\n            })}\r\n          </Card.Group>\r\n        ) : (\r\n          <Segment\r\n            raised\r\n            placeholder\r\n            textAlign=\"center\"\r\n            size=\"big\"\r\n            loading={loading}\r\n          >\r\n            You currently do not have any activity\r\n          </Segment>\r\n        )}\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default RiderActivityPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nfunction SummaryData(setRiderSummary, setSalary, setSchedule, setOrders, setRatings, id) {\n    const [data, setData] = useState([]);\n    const url1 = `http://localhost:5000/api/riders/${id}/summary`\n    useEffect(() => {\n        Axios.get(url1)\n            .then(response => {\n                console.log(\"response\", response.data);\n                setRiderSummary(response.data);\n            })\n            .catch(error => {\n                console.log(\"Error retrieving rider summary data:\", error);\n            })\n    }, [])\n\n    const url2 = `http://localhost:5000/api/riders/${id}/salary`\n    useEffect(() => {\n        Axios.get(url2)\n            .then(response => {\n                console.log(\"response\", response.data);\n                setSalary(response.data);\n            })\n            .catch(error => {\n                console.log(\"Error retrieving order data:\", error);\n            })\n    }, [])\n\n    const url3 = `http://localhost:5000/api/riders/${id}/schedule`\n    useEffect(() => {\n        Axios.get(url3)\n            .then(response => {\n                console.log(\"response\", response.data);\n                setSchedule(response.data);\n            })\n            .catch(error => {\n                console.log(\"Error retrieving rider schedule:\", error);\n            })\n    }, [])\n\n    const url4 = `http://localhost:5000/api/riders/${id}/orders`\n    useEffect(() => {\n        Axios.get(url4)\n            .then(response => {\n                console.log(\"response\", response.data);\n                setOrders(response.data);\n            })\n            .catch(error => {\n                console.log(\"Error retrieving rider's order data:\", error);\n            })\n    }, [])\n\n    const url5 = `http://localhost:5000/api/riders/${id}/ratings`\n    useEffect(() => {\n        Axios.get(url5)\n            .then(response => {\n                console.log(\"response\", response.data);\n                setRatings(response.data);\n            })\n            .catch(error => {\n                console.log(\"Error retrieving rider's ratings :\", error);\n            })\n    }, [])\n\n}\n\nexport default SummaryData;\n","import React, { useState, useContext } from \"react\";\r\nimport { Menu, Container, Statistic, Icon } from \"semantic-ui-react\";\r\nimport { MonthRangeInput } from \"semantic-ui-calendar-react\";\r\nimport { parse, isBefore, format } from \"date-fns\";\r\nimport \"styles/AllRestaurants.scss\";\r\nimport SummaryData from \"components/riders/SummaryData\";\r\nimport UserContext from \"utils/UserContext\";\r\n\r\nfunction RiderSummaryPage() {\r\n  const [selectedMonths, setSelectedMonths] = useState(\"\");\r\n  const [riderSummary, setRiderSummary] = useState([]);\r\n  const [riderSalary, setRiderSalary] = useState([]);\r\n  const [riderSchedule, setRiderSchedule] = useState([]);\r\n  const [riderOrder, setRiderOrder] = useState([]);\r\n  const [riderRatings, setRiderRatings] = useState([]);\r\n  const { uid } = useContext(UserContext);\r\n\r\n  const getPeriod = selectedMonths => {\r\n    let period = selectedMonths.split(\" - \");\r\n    console.log(period);\r\n    if (period.length < 2 || period[0] === \"\" || period[1] === \"\") {\r\n      console.log(\"period invalid\");\r\n      return [];\r\n    }\r\n    let monthA = parse(period[0], \"MM/yyyy\", new Date());\r\n    let monthB = parse(period[1], \"MM/yyyy\", new Date());\r\n\r\n    if (isBefore(monthB, monthA)) {\r\n      [monthA, monthB] = [monthB, monthA];\r\n    }\r\n\r\n    return [monthA, monthB];\r\n  };\r\n\r\n  const period = getPeriod(selectedMonths);\r\n  const numMth = new Date(new Date() - period[0]).getMonth() + 1;\r\n  const numWk = Math.round((new Date() - period[0]) / (7 * 24 * 60 * 60 *1000)) + 1;\r\n  // console.log(\"numMth is: \" + numMth)\r\n  // console.log(\"numWk is: \" + numWk)\r\n  SummaryData(setRiderSummary, setRiderSalary, setRiderSchedule, setRiderOrder, setRiderRatings, uid);\r\n  // console.log(\"SUMMARY: \" + riderSummary + \" SALARY: \" + riderSalary + \" SCHEDULE: \" + riderSchedule + \" ORDERS: \" + riderOrder);\r\n\r\n  return (\r\n    <main className=\"rider-summary-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <h1 style={{ marginInlineEnd: \"1rem\" }}>Performance summary for</h1>\r\n          <MonthRangeInput\r\n            className=\"rounded-input\"\r\n            clearable\r\n            placeholder=\"Select month(s)\"\r\n            popupPosition=\"bottom center\"\r\n            onChange={(event, data) => {\r\n              setSelectedMonths(data.value);\r\n            }}\r\n            dateFormat=\"MM/YYYY\"\r\n            value={selectedMonths}\r\n            closable\r\n            maxDate={new Date()}\r\n          />\r\n        </div>\r\n\r\n        {period.length > 0 && (\r\n          <>\r\n            <h1>\r\n              Period{\" \"}\r\n              <font color=\"#3445c3\">{format(period[0], \"MMM yyyy\")}</font> to{\" \"}\r\n              <font color=\"#3445c3\">{format(period[1], \"MMM yyyy\")}</font>\r\n            </h1>\r\n\r\n            <Statistic.Group\r\n              widths=\"3\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total earnings</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {(riderSalary.filter(date => {\r\n                    return new Date(date['st_mth_wk']).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['st_mth_wk']).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['st_mth_wk']).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['st_mth_wk']).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).reduce((acc, curr) => {\r\n                    return (parseFloat(acc) + parseFloat(curr['sal'])).toFixed(2)\r\n                  }\r\n                  , 0))\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average earnings per month</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {(riderSalary.filter(date => {\r\n                    return new Date(date['st_mth_wk']).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['st_mth_wk']).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['st_mth_wk']).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['st_mth_wk']).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).reduce((acc, curr) => {\r\n                    return (parseFloat(acc) + parseFloat(curr['sal']))\r\n                  }\r\n                  , 0) / numMth).toFixed(2)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average earnings per week</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {(riderSalary.filter(date => {\r\n                    return new Date(date['st_mth_wk']).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['st_mth_wk']).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['st_mth_wk']).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['st_mth_wk']).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).reduce((acc, curr) => {\r\n                    return (parseFloat(acc) + parseFloat(curr['sal']))\r\n                  }\r\n                  , 0) / numWk).toFixed(2)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n\r\n            <Statistic.Group\r\n              widths=\"3\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total hours</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"time\" />\r\n                  {(riderSchedule.filter(date => {\r\n                    return new Date(date['sc_date']).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['sc_date']).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['sc_date']).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['sc_date']).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).reduce((acc, curr) => {\r\n                    return (parseInt(acc) + (parseInt(curr['e_time']) - parseInt(curr['st_time'])))\r\n                  }\r\n                  , 0))\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average hours per month</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"time\" />\r\n                  {+(riderSchedule.filter(date => {\r\n                    return new Date(date['sc_date']).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['sc_date']).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['sc_date']).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['sc_date']).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).reduce((acc, curr) => {\r\n                    return (parseInt(acc) + (parseInt(curr['e_time']) - parseInt(curr['st_time'])))\r\n                  }\r\n                  , 0) / numMth).toFixed(2)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average hours per week</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"time\" />\r\n                  {+(riderSchedule.filter(date => {\r\n                    return new Date(date['sc_date']).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['sc_date']).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['sc_date']).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['sc_date']).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).reduce((acc, curr) => {\r\n                    return (parseInt(acc) + (parseInt(curr['e_time']) - parseInt(curr['st_time'])))\r\n                  }\r\n                  , 0) / numWk).toFixed(2)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n\r\n            <Statistic.Group\r\n              widths=\"3\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total orders</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"truck\" />\r\n                  {(riderOrder.filter(date => {\r\n                    return new Date(date['odatetime']*1000).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['odatetime']*1000).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['odatetime']*1000).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['odatetime']*1000).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).length)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average orders per month</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"truck\" />\r\n                  {+(riderOrder.filter(date => {\r\n                    return new Date(date['odatetime']*1000).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['odatetime']*1000).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['odatetime']*1000).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['odatetime']*1000).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).length / numMth).toFixed(2)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average orders per week</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"truck\" />\r\n                  {+(riderOrder.filter(date => {\r\n                    return new Date(date['odatetime']*1000).getMonth() >= new Date(period[0]).getMonth() &&\r\n                    new Date(date['odatetime']*1000).getMonth() <= new Date(period[1]).getMonth() &&\r\n                    new Date(date['odatetime']*1000).getFullYear() >= new Date(period[0]).getFullYear() &&\r\n                    new Date(date['odatetime']*1000).getFullYear() <= new Date(period[1]).getFullYear()\r\n                  }).length / numWk).toFixed(2)\r\n                  }\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n\r\n            <Statistic.Group\r\n              widths=\"2\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic color=\"violet\">\r\n                <Statistic.Label>Total ratings</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"star\" />\r\n                  {(riderRatings.length)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic color=\"violet\">\r\n                <Statistic.Label>Average ratings</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"star\" />\r\n                  {+(riderRatings.reduce((acc, curr) => parseInt(acc) + parseInt(curr['rating']), 0) / riderRatings.length).toFixed(2)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n          </>\r\n        )}\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default RiderSummaryPage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Menu,\r\n  Container,\r\n  Statistic,\r\n  Icon,\r\n  Segment,\r\n  Loader,\r\n} from \"semantic-ui-react\";\r\nimport { MonthRangeInput } from \"semantic-ui-calendar-react\";\r\nimport {\r\n  parse,\r\n  isBefore,\r\n  format,\r\n  getUnixTime,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  differenceInCalendarMonths,\r\n  differenceInCalendarWeeks,\r\n} from \"date-fns\";\r\nimport \"styles/AllRestaurants.scss\";\r\nimport Axios from \"axios\";\r\nimport UserContext from \"utils/UserContext\";\r\n\r\nconst restaurant = {\r\n  name: \"Toast Box\",\r\n  food1: {\r\n    name: \"Curry Chicken with Rice\",\r\n    orders: 193,\r\n  },\r\n  food2: {\r\n    name: \"Mee Siam\",\r\n    orders: 183,\r\n  },\r\n  food3: {\r\n    name: \"Lu Rou Fan\",\r\n    orders: 129,\r\n  },\r\n  food4: {\r\n    name: \"Peanut Butter Thick Toast\",\r\n    orders: 110,\r\n  },\r\n  food5: {\r\n    name: \"Ice Milo\",\r\n    orders: 101,\r\n  },\r\n};\r\n\r\nconst promoData = [\r\n  \"10% off on all food (14/2/2020 - 14/3/2020)\",\r\n  \"Free delivery (19/2/2020 - 31/3/2020)\",\r\n  \"5% off on all food (15/3/2020 - 15/4/2020)\",\r\n];\r\n\r\nfunction StaffSummaryPage() {\r\n  const [selectedMonths, setSelectedMonths] = useState(\"\");\r\n  const [restaurantName, setRestaurantName] = useState(\"\");\r\n  const [period, setPeriod] = useState([]);\r\n  const [summaryInfo, setSummaryInfo] = useState({});\r\n  const { uid } = useContext(UserContext);\r\n  const [statisticsLoading, setStatisticsLoading] = useState(false);\r\n  const [nameLoading, setNameLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:5000/api/staffs/${uid}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        let { rname } = response.data;\r\n        setRestaurantName(rname);\r\n        setNameLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  }, []);\r\n\r\n  const fetchSummaryInfo = (monthA, monthB) => {\r\n    setStatisticsLoading(true);\r\n    console.log(\"Fetch some info!\");\r\n    console.log(monthA, monthB);\r\n    let starttime = getUnixTime(monthA);\r\n    let endtime = getUnixTime(monthB);\r\n    console.log(\"Start unix time\", starttime);\r\n    const url = `http://localhost:5000/api/restaurants/${restaurantName}/summary?starttime=${starttime}&endtime=${endtime}`;\r\n    Axios.get(url)\r\n      .then((response) => {\r\n        let { rsummary } = response.data;\r\n        console.log(rsummary);\r\n        setSummaryInfo(rsummary);\r\n        setPeriod([monthA, monthB]);\r\n        setStatisticsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setStatisticsLoading(false);\r\n      });\r\n  };\r\n\r\n  const onMonthInput = (range) => {\r\n    setSelectedMonths(range);\r\n    setPeriod({});\r\n    let period = range.split(\" - \");\r\n    console.log(period);\r\n    if (period.length < 2 || period[0] === \"\" || period[1] === \"\") {\r\n      console.log(\"period invalid\");\r\n      return [];\r\n    }\r\n    let monthA = parse(period[0], \"MM/yyyy\", new Date());\r\n    let monthB = parse(period[1], \"MM/yyyy\", new Date());\r\n\r\n    if (isBefore(monthB, monthA)) {\r\n      [monthA, monthB] = [monthB, monthA];\r\n    }\r\n\r\n    fetchSummaryInfo(startOfMonth(monthA), endOfMonth(monthB));\r\n  };\r\n\r\n  const getTotalRevenue = () => {\r\n    return summaryInfo.totalrevenue;\r\n  };\r\n\r\n  const getAvgMonthlyRevenue = () => {\r\n    let months = differenceInCalendarMonths(period[1], period[0]) + 1;\r\n    console.log(months);\r\n    return getTotalRevenue() / months;\r\n  };\r\n\r\n  const getAvgWeeklyRevenue = () => {\r\n    let weeks = differenceInCalendarWeeks(period[1], period[0]);\r\n    return getTotalRevenue() / weeks;\r\n  };\r\n\r\n  const getTotalOrders = () => {\r\n    return summaryInfo.ordercount;\r\n  };\r\n\r\n  const getAvgMonthlyOrders = () => {\r\n    let months = differenceInCalendarMonths(period[1], period[0]) + 1;\r\n    return getTotalOrders() / months;\r\n  };\r\n\r\n  const getAvgWeeklyOrders = () => {\r\n    let weeks = differenceInCalendarWeeks(period[1], period[0]);\r\n    return getTotalOrders() / weeks;\r\n  };\r\n\r\n  const popularFood = summaryInfo.popularitems;\r\n\r\n  return (\r\n    <main className=\"staff-summary-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <h1>{nameLoading ? <Loader inline active /> : restaurantName}</h1>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          <h2 style={{ marginInlineEnd: \"1rem\" }}>Summary for</h2>\r\n          <MonthRangeInput\r\n            className=\"rounded-input\"\r\n            clearable\r\n            placeholder=\"Select month(s)\"\r\n            popupPosition=\"bottom center\"\r\n            onChange={(event, data) => {\r\n              onMonthInput(data.value);\r\n            }}\r\n            value={selectedMonths}\r\n            dateFormat=\"MM/YYYY\"\r\n            closable\r\n            maxDate={new Date()}\r\n            disabled={nameLoading}\r\n            loading={nameLoading}\r\n          />\r\n        </div>\r\n\r\n        {period.length === 2 ? (\r\n          <>\r\n            <h1>\r\n              Period{\" \"}\r\n              <font color=\"#3445c3\">{format(period[0], \"MMM yyyy\")}</font> to{\" \"}\r\n              <font color=\"#3445c3\">{format(period[1], \"MMM yyyy\")}</font>\r\n            </h1>\r\n            <Statistic.Group\r\n              widths=\"3\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total revenue</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {getTotalRevenue().toFixed(2)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average revenue per month</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {getAvgMonthlyRevenue().toFixed(2)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average revenue per week</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {getAvgWeeklyRevenue().toFixed(2)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n            <Statistic.Group\r\n              widths=\"3\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total orders</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"food\" />\r\n                  {getTotalOrders().toFixed(0)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average orders per month</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"food\" />\r\n                  {getAvgMonthlyOrders().toFixed(2)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Average orders per week</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"food\" />\r\n                  {getAvgWeeklyOrders().toFixed(2)}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Statistic.Group widths=\"1\" size=\"huge\">\r\n              <Statistic>\r\n                <Statistic.Label>Top</Statistic.Label>\r\n                <Statistic.Value text>Top Food</Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n            {popularFood && (\r\n              <Statistic.Group widths={popularFood.length} size=\"tiny\">\r\n                {popularFood.length >= 1 && (\r\n                  <Statistic>\r\n                    <Statistic.Value>1st</Statistic.Value>\r\n                    <Statistic.Value text>\r\n                      <font color=\"#643cc6\">{popularFood[0].fname}</font>\r\n                    </Statistic.Value>\r\n                    <Statistic.Label>\r\n                      {popularFood[0].sum} Orders\r\n                    </Statistic.Label>\r\n                  </Statistic>\r\n                )}\r\n\r\n                {popularFood.length >= 2 && (\r\n                  <Statistic>\r\n                    <Statistic.Value>2nd</Statistic.Value>\r\n                    <Statistic.Value text>\r\n                      <font color=\"#643cc6\">{popularFood[1].fname}</font>\r\n                    </Statistic.Value>\r\n                    <Statistic.Label>\r\n                      {popularFood[1].sum} Orders\r\n                    </Statistic.Label>\r\n                  </Statistic>\r\n                )}\r\n\r\n                {popularFood.length >= 3 && (\r\n                  <Statistic>\r\n                    <Statistic.Value>3rd</Statistic.Value>\r\n                    <Statistic.Value text>\r\n                      <font color=\"#643cc6\">{popularFood[2].fname}</font>\r\n                    </Statistic.Value>\r\n                    <Statistic.Label>\r\n                      {popularFood[2].sum} Orders\r\n                    </Statistic.Label>\r\n                  </Statistic>\r\n                )}\r\n\r\n                {popularFood.length >= 4 && (\r\n                  <Statistic>\r\n                    <Statistic.Value>4th</Statistic.Value>\r\n                    <Statistic.Value text>\r\n                      <font color=\"#643cc6\">{popularFood[3].fname}</font>\r\n                    </Statistic.Value>\r\n                    <Statistic.Label>\r\n                      {popularFood[3].sum} Orders\r\n                    </Statistic.Label>\r\n                  </Statistic>\r\n                )}\r\n\r\n                {popularFood.length >= 5 && (\r\n                  <Statistic>\r\n                    <Statistic.Value>5th</Statistic.Value>\r\n                    <Statistic.Value text>\r\n                      <font color=\"#643cc6\">{popularFood[4].fname}</font>\r\n                    </Statistic.Value>\r\n                    <Statistic.Label>\r\n                      {popularFood[4].sum} Orders\r\n                    </Statistic.Label>\r\n                  </Statistic>\r\n                )}\r\n              </Statistic.Group>\r\n            )}\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </>\r\n        ) : (\r\n            <Segment\r\n              size=\"massive\"\r\n              basic\r\n              placeholder\r\n              content=\"You have not selected a period\"\r\n              textAlign=\"center\"\r\n              loading={statisticsLoading}\r\n            />\r\n          )}\r\n        <h1>Promotional Campaigns</h1>\r\n        {promoData.map((promo, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <h2>{promo}</h2>\r\n\r\n              <Statistic.Group\r\n                widths=\"3\"\r\n                size=\"small\"\r\n                style={{ margin: \"1em 0 1em 0\" }}\r\n              >\r\n                <Statistic>\r\n                  <Statistic.Value>30</Statistic.Value>\r\n                  <Statistic.Label>Days</Statistic.Label>\r\n                </Statistic>\r\n\r\n                <Statistic>\r\n                  <Statistic.Label>Total orders</Statistic.Label>\r\n                  <Statistic.Value>\r\n                    <Icon name=\"food\" />\r\n                    3432\r\n                  </Statistic.Value>\r\n                </Statistic>\r\n\r\n                <Statistic>\r\n                  <Statistic.Label>Average orders</Statistic.Label>\r\n                  <Statistic.Value>\r\n                    <Icon name=\"food\" />\r\n                    34\r\n                  </Statistic.Value>\r\n                </Statistic>\r\n              </Statistic.Group>\r\n            </div>\r\n          );\r\n        })}\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default StaffSummaryPage;\r\n","import React, { useState } from \"react\";\nimport { Item, Label, Input, Button, Modal } from \"semantic-ui-react\";\nimport NumberInput from \"semantic-ui-react-numberinput\";\nimport \"styles/FoodItem.scss\";\n\nfunction FoodItemEditor(props) {\n  const [isModalOpened, setModalOpened] = useState(false);\n\n  return (\n    <Item>\n      {/* <Item.Image src={require(\"images/curry-chicken.jpg\")} /> */}\n      <Item.Image src={props.imgurl} />\n\n      <Item.Content>\n        <Item.Header\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Input\n            value={props.name}\n            size=\"mini\"\n            onChange={(event, data) => {\n              let newName = data.value;\n              props.updateFoodItem(\"name\", newName, props.index);\n            }}\n          />\n          <Input\n            type=\"number\"\n            label={<Label basic>$</Label>}\n            labelPosition=\"left\"\n            value={props.price === 0 ? \"\" : props.price}\n            size=\"mini\"\n            onChange={(event, data) => {\n              let newPrice = Number(Number(data.value).toFixed(2));\n              props.updateFoodItem(\"price\", newPrice, props.index);\n            }}\n          />\n        </Item.Header>\n\n        <Item.Extra>\n          <Input\n            as={Label}\n            value={props.category}\n            size=\"mini\"\n            transparent\n            onChange={(event, data) => {\n              let newCategory = data.value;\n              props.updateFoodItem(\"category\", newCategory, props.index);\n            }}\n          />\n        </Item.Extra>\n\n        <Item.Extra>\n          <Input\n            label={<Label basic>Image url</Label>}\n            labelPosition=\"left\"\n            value={props.imgurl}\n            size=\"mini\"\n            onChange={(event, data) => {\n              let newImgurl = data.value;\n              props.updateFoodItem(\"imgurl\", newImgurl, props.index);\n            }}\n          />\n        </Item.Extra>\n\n        <Item.Extra>\n          <NumberInput\n            minValue={0}\n            value={props.limit.toString()}\n            onChange={(value) => {\n              let newLimit = parseInt(value);\n              props.updateFoodItem(\"limit\", newLimit, props.index);\n            }}\n            className=\"number-input\"\n          />\n          {props.deleteFoodItem && (\n            <Modal\n              open={isModalOpened}\n              onClose={() => setModalOpened(false)}\n              trigger={\n                <Button color=\"red\"\n                  floated=\"right\"\n                  color=\"red\"\n                  icon=\"close\"\n                  onClick={() => setModalOpened(true)} />\n              }\n            >\n              <Modal.Header>Confirm delete menu item?</Modal.Header>\n              <Modal.Content>\n                Confirm delete {props.name} from the menu?\n                This cannot be undone.\n                </Modal.Content>\n              <Modal.Actions>\n                <Button\n                  color=\"red\"\n                  content=\"Cancel\"\n                  onClick={() => setModalOpened(false)}\n                />\n                <Button\n                  color=\"green\"\n                  content=\"Confirm\"\n                  onClick={() => {\n                    props.deleteFoodItem(props.name);\n                    setModalOpened(false);\n                  }}\n                />\n              </Modal.Actions>\n\n\n            </Modal>\n            // <Button\n            //   floated=\"right\"\n            //   icon=\"close\"\n            //   color=\"red\"\n            //   onClick={() => {\n            //     props.deleteFoodItem(props.name);\n            //   }}\n            // />\n          )}\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport default FoodItemEditor;\n","import React, { useState } from \"react\";\nimport { Button, Modal, Item } from \"semantic-ui-react\";\nimport FoodItemEditor from \"./FoodItemEditor\";\n\nfunction NewItemButton(props) {\n  const [isModalOpened, setModalOpened] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [category, setCategory] = useState(\"\");\n  const [limit, setLimit] = useState(0);\n  const [imgurl, setImgurl] = useState(\"\");\n\n  const updateFoodItem = (key, value) => {\n    switch (key) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"price\":\n        setPrice(value);\n        break;\n      case \"category\":\n        setCategory(value);\n        break;\n      case \"limit\":\n        setLimit(value);\n        break;\n      case \"imgurl\":\n        setImgurl(value);\n      default:\n        console.log(\"Unknown key in creating new food item\");\n    }\n  };\n\n  const isValid = name && price && category;\n\n  return (\n    <Modal\n      open={isModalOpened}\n      onOpen={() => {\n        setName(\"\");\n        setPrice(0);\n        setCategory(\"\");\n        setLimit(0);\n        setImgurl(\"https://platerate.com/images/tempfoodnotext.png\");\n      }}\n      onClose={() => setModalOpened(false)}\n      trigger={\n        <Button color=\"teal\" onClick={() => setModalOpened(true)} icon=\"plus\" />\n      }\n    >\n      <Modal.Header>Add new food item</Modal.Header>\n\n      <Modal.Content>\n        <Item.Group>\n          <FoodItemEditor\n            name={name}\n            price={price}\n            category={category}\n            limit={limit}\n            imgurl={imgurl}\n            updateFoodItem={updateFoodItem}\n          />\n        </Item.Group>\n      </Modal.Content>\n\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          content=\"Cancel\"\n          onClick={() => setModalOpened(false)}\n        />\n        <Button\n          color=\"green\"\n          content=\"Confirm\"\n          disabled={!isValid}\n          onClick={() => {\n            props.createFoodItem({\n              name: `'${name}'`,\n              price: `'${price}'`,\n              category: `'${category}'`,\n              limit: `${limit}`,\n              imgurl: `'${imgurl}'`\n            });\n            setModalOpened(false);\n          }}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default NewItemButton;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Item,\n  Button,\n  Message,\n  Segment,\n  Form,\n  Input,\n  Label,\n  Loader,\n} from \"semantic-ui-react\";\nimport FoodItemEditor from \"./FoodItemEditor\";\nimport NewItemButton from \"./NewItemButton\";\nimport Axios from \"axios\";\nimport UserContext from \"utils/UserContext\";\n\nconst data = [\n  {\n    name: \"Curry Chicken with Rice\",\n    price: 6.3,\n    category: \"Asian\",\n    limit: 5,\n  },\n  {\n    name: \"Dry Mee Siam\",\n    price: 5.6,\n    category: \"Malay\",\n    limit: 3,\n  },\n  {\n    name: \"Ice Milo\",\n    price: 1.3,\n    category: \"Drinks\",\n    limit: 10,\n  },\n  {\n    name: \"Fried Bee Hoon\",\n    price: 4.3,\n    category: \"Asian\",\n    limit: 8,\n  },\n  {\n    name: \"Lu Rou Fan\",\n    price: 7.99,\n    category: \"Asian\",\n    limit: 5,\n  },\n  {\n    name: \"Peanut Butter Thick Toast\",\n    price: 2.1,\n    category: \"Asian\",\n    limit: 10,\n  },\n];\n\nconst rname = \"Toast Box\";\n\nfunction RestaurantMenu() {\n  const [restaurantName, setRestaurantName] = useState(\"\");\n  const [restaurantFoodItems, setRestaurantFoodItems] = useState([]);\n  const [saveChanges, setSaveChanges] = useState(false);\n  const [minAmt, setMinAmt] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const { uid } = useContext(UserContext);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const updateFoodItem = (key, value, index) => {\n    let clone = [...restaurantFoodItems];\n    let affectedItem = clone[index];\n    let itemClone = {\n      name: affectedItem.name,\n      price: affectedItem.price,\n      category: affectedItem.category,\n      limit: affectedItem.limit,\n      imgurl: affectedItem.imgurl,\n    };\n    itemClone[key] = value;\n    clone[index] = itemClone;\n    setRestaurantFoodItems(clone);\n  };\n\n  const fetchData = () => {\n    setLoading(true);\n    const url = `http://localhost:5000/api/staffs/${uid}`;\n    Axios.get(url)\n      .then((response) => {\n        let rname = response.data.rname;\n        setRestaurantName(rname);\n        const url2 = `http://localhost:5000/api/restaurants/'${rname}'/menu`;\n        Axios.get(url2)\n          .then((response) => {\n            let minamt = response.data.minamt;\n            let menu = response.data.menu;\n            setRestaurantFoodItems(menu);\n            setMinAmt(minamt);\n            setLoading(false);\n          })\n          .catch((error) => {\n            console.log(\"Error\", error);\n          });\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  // const deleteFoodItem = (index) => {\n  const deleteFoodItem = (name) => {\n    console.log(\"Delete this item:\", name);\n    const url = `http://localhost:5000/api/restaurants/'${restaurantName}'/menu`;\n    Axios.delete(url, { data: { fname: `'${name}'` } })\n      .then((response) => {\n        console.log(\"Deleted item from menu:\", response.data);\n        fetchData();\n      })\n      .catch((error) => {\n        console.log(\"Error occurred deleting item from menu\", error);\n      });\n    //let clone = [...restaurantFoodItems];\n    //clone.splice(index, 1);\n    //setRestaurantFoodItems(clone);\n  };\n\n  const createFoodItem = (foodItem) => {\n    const url = `http://localhost:5000/api/restaurants/'${restaurantName}'/menu`;\n    console.log(foodItem);\n    Axios.post(url, foodItem)\n      .then((response) => {\n        console.log(response);\n        console.log(\"Item successfully added to the menu\");\n        fetchData();\n      })\n      .catch((error) => {\n        console.log(\"An error occured while adding new item to the menu\");\n        console.log(error.data);\n      });\n    //setRestaurantFoodItems([foodItem].concat(restaurantFoodItems));\n  };\n\n  //parses data in menu\n  const getChanges = () => {\n    let updatedItems = [];\n    restaurantFoodItems.forEach((item) => {\n      let updatedItem = {};\n      updatedItem.fname = `'${item.name}'`;\n      updatedItem.cat = `'${item.category}'`;\n      updatedItem.imgurl = `'${item.imgurl}'`;\n      updatedItem.flimit = `${item.limit}`;\n      updatedItem.price = `${item.price}`;\n      updatedItems.push(updatedItem);\n    });\n    return updatedItems;\n  };\n\n  const handleSaveChanges = () => {\n    // API call to patch new changes\n    let updatedData = {\n      foodLimitPrice: getChanges(),\n      minamt: minAmt,\n    };\n\n    const url = `http://localhost:5000/api/restaurants/'${restaurantName}'/menu`;\n    Axios.put(url, updatedData)\n      .then((response) => {\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(\"Error updating menu:\", error);\n      });\n\n    // if success\n    setSaveChanges(true);\n  };\n\n  return (\n    <>\n      {saveChanges && (\n        <Message\n          success\n          header=\"Success\"\n          content=\"Food items are updated successfully\"\n          style={{ textAlign: \"center\" }}\n        />\n      )}\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <h1>{loading ? <Loader inline active /> : restaurantName}</h1>\n        <span>\n          <Button color=\"blue\" onClick={handleSaveChanges}>\n            Save changes\n          </Button>\n          <NewItemButton createFoodItem={createFoodItem} />\n        </span>\n      </div>\n\n      <Form>\n        <Form.Field inline>\n          <label>Min order amount</label>\n          <Input\n            type=\"number\"\n            label={<Label basic>$</Label>}\n            labelPosition=\"left\"\n            value={minAmt}\n            size=\"mini\"\n            onChange={(event, data) => {\n              let newMinAmt = Number(Number(data.value).toFixed(2));\n              setMinAmt(newMinAmt);\n            }}\n            disabled={loading}\n            loading={loading}\n          />\n        </Form.Field>\n      </Form>\n\n      {loading ? (\n        <Segment\n          size=\"massive\"\n          basic\n          placeholder\n          textAlign=\"center\"\n          loading={loading}\n        />\n      ) : (\n          <Item.Group divided>\n            {restaurantFoodItems.map((value, index) => {\n              return (\n                <FoodItemEditor\n                  key={index}\n                  index={index}\n                  name={value.name}\n                  price={value.price}\n                  category={value.category}\n                  limit={value.limit}\n                  imgurl={value.imgurl}\n                  updateFoodItem={updateFoodItem}\n                  deleteFoodItem={deleteFoodItem}\n                />\n              );\n            })}\n          </Item.Group>\n        )}\n    </>\n  );\n}\n\nexport default RestaurantMenu;\n","import React from \"react\";\r\nimport { Menu, Container } from \"semantic-ui-react\";\r\nimport RestaurantMenu from \"components/staffs/RestaurantMenu\";\r\n\r\nfunction StaffMenuPage() {\r\n  return (\r\n    <main className=\"staff-menu-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <RestaurantMenu />\r\n      </Container>\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default StaffMenuPage;\r\n","import React from \"react\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\n\nfunction CustomerSummaryCard(props) {\n    return (\n        <Card fluid raised color={\"teal\"}>\n            <Card.Content>\n                <Card.Header\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                    Customer ID: {props.cid}\n                </Card.Header>\n            </Card.Content>\n            <Card.Content>\n                <Card.Header>\n                    {/* <Icon name=\"user\" /> */}\n                    <Image\n                        floated='left'\n                        size='mini'\n                        src={`https://react.semantic-ui.com/images/avatar/large/${props.image}`}\n                    />\n                    Name: {props.name}\n                </Card.Header>\n                <Card.Description>\n                    <Icon name=\"mail\" />\n                    <a href>{props.email}</a>\n                    <br />\n                    {/* <Icon name=\"calendar alternate outline\" />\n                        <strong>Join Date: {format(props.joindate * 1000, \"dd/MM/yyyy\")}</strong>\n                        <br /> */}\n                    <Icon name=\"file alternate\" />\n                    <strong>Number of orders: {props.ordercount}</strong>\n                    <br />\n                    <strong>Total payment: <Icon name=\"dollar\" />{props.totalpayment}</strong>\n                </Card.Description>\n            </Card.Content>\n        </Card >\n    );\n}\n\nexport default CustomerSummaryCard;\n","import React from \"react\";\nimport { Card, Icon } from \"semantic-ui-react\";\n\nfunction OrderSummaryCard(props) {\n    return (\n        <Card fluid raised color={\"teal\"}>\n            <Card.Content>\n                <Card.Header>\n                    <Icon name=\"location arrow\" />\n                    Delivery Location: {props.location}\n                </Card.Header>\n                <Card.Description>\n                    <Icon name=\"file alternate\" />\n                    <strong>Order Count: {props.count}</strong>\n                </Card.Description>\n            </Card.Content>\n        </Card >\n    );\n}\n\nexport default OrderSummaryCard;\n","import React, { useState } from \"react\";\nimport { Card, Button, Image, Icon } from \"semantic-ui-react\";\nimport { format } from \"date-fns\";\n\nfunction RiderSummaryCard(props) {\n    const [isExpanded, setExpanded] = useState(false);\n\n    return (\n        <Card fluid raised color={\"teal\"}>\n            <Card.Content>\n                <Card.Header\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                >\n                    Rider ID: {props.id}\n                    <Button\n                        primary\n                        floated=\"right\"\n                        onClick={() => setExpanded(!isExpanded)}\n                    >\n                        {isExpanded ? \"View less\" : \"View more\"}\n                    </Button>\n                </Card.Header>\n                {isExpanded && (\n                    <Card.Description>\n                        <Icon name=\"dollar\" />\n                        <strong>Total Salary = {props.totalsalary}</strong>\n                        <br />\n                        <Icon name=\"clock outline\" />\n                        <strong>{props.hours} hours worked </strong>\n                        <br />\n                        <Icon name=\"motorcycle\" />\n                        <strong>{props.noorder} orders delivered</strong>\n                        <br />\n                        <Icon name=\"clock\" />\n                        <strong>Average delivery time of {props.avgdelivertime} mins</strong>\n                        <br />\n                        <Icon name=\"star outline\" />\n                        <strong>{props.norating} ratings received </strong>\n                        <br />\n                        <strong>{\" \"}Average rating: {props.avgrating} <Icon name=\"star\" /></strong>\n                    </Card.Description>\n                )}\n\n            </Card.Content>\n\n        </Card >\n    );\n}\n\nexport default RiderSummaryCard;","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Container, Statistic, Icon, Button, Card, Segment, Loader } from \"semantic-ui-react\";\r\nimport { MonthRangeInput } from \"semantic-ui-calendar-react\";\r\nimport {\r\n  parse,\r\n  isBefore,\r\n  format,\r\n  getUnixTime,\r\n  startOfMonth,\r\n  endOfMonth\r\n} from \"date-fns\";\r\nimport SummaryData from \"components/managers/SummaryData\";\r\nimport CustomerSummaryCard from \"components/managers/CustomerSummaryCard\";\r\nimport OrderSummaryCard from \"components/managers/OrderSummaryCard\";\r\nimport RiderSummaryCard from \"components/managers/RiderSummaryCard\";\r\nimport Axios from \"axios\";\r\n\r\nfunction ManagerSummaryPage() {\r\n  const [period, setPeriod] = useState([]);\r\n  const [selectedMonths, setSelectedMonths] = useState(\"\");\r\n  const [riderSummary, setRiderSummary] = useState([]);\r\n  const [customerSummary, setCustomerSummary] = useState([]);\r\n  const [overviewSummary, setOverviewSummary] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loading1, setLoading1] = useState(false);\r\n  const [overview, setOverviewOn] = useState(true);\r\n  const [viewCustomers, setViewCustomerOn] = useState(false);\r\n  const [viewOrders, setViewOrderOn] = useState(false);\r\n  const [viewRiders, setViewRiderOn] = useState(false);\r\n\r\n  const url = `http://localhost:5000/api/managers/summary/general`\r\n  useEffect(() => {\r\n    Axios.get(url)\r\n      .then(response => {\r\n        let { overviewsummary } = response.data;\r\n        console.log(overviewsummary);\r\n        setOverviewSummary(overviewsummary);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error retrieving overview:\", error);\r\n      })\r\n  }, []);\r\n\r\n  const getCustomerSummary = (monthA, monthB) => {\r\n    setLoading1(true);\r\n    let cusstarttime = getUnixTime(monthA);\r\n    let cusendtime = getUnixTime(monthB);\r\n    const url = `http://localhost:5000/api/managers/summary/customers?starttime=${cusstarttime}&endtime=${cusendtime}`;\r\n    Axios.get(url)\r\n      .then(response => {\r\n        let { fdssummary } = response.data;\r\n        console.log(fdssummary);\r\n        setCustomerSummary(fdssummary);\r\n        setPeriod([monthA, monthB]);\r\n        setLoading1(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error retrieving customer summary data:\", error);\r\n        setLoading1(false);\r\n      });\r\n  };\r\n\r\n  const getRiderSummary = (monthA, monthB) => {\r\n    setLoading1(true);\r\n    let starttime = getUnixTime(monthA);\r\n    let endtime = getUnixTime(monthB);\r\n    const url1 = `http://localhost:5000/api/managers/summary/riders?starttime=${starttime}&endtime=${endtime}`;\r\n    Axios.get(url1)\r\n      .then(response => {\r\n        console.log(response.date);\r\n        setRiderSummary(response.data);\r\n        setPeriod([monthA, monthB]);\r\n        setLoading1(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error retrieving rider summary data:\", error);\r\n        setLoading1(false);\r\n      });\r\n  };\r\n\r\n  const onMonthInput = (range) => {\r\n    setSelectedMonths(range);\r\n    setPeriod({});\r\n    let period = range.split(\" - \");\r\n    console.log(period);\r\n    if (period.length < 2 || period[0] === \"\" || period[1] === \"\") {\r\n      console.log(\"period invalid\");\r\n      return [];\r\n    }\r\n    let monthA = parse(period[0], \"MM/yyyy\", new Date());\r\n    let monthB = parse(period[1], \"MM/yyyy\", new Date());\r\n\r\n    if (isBefore(monthB, monthA)) {\r\n      [monthA, monthB] = [monthB, monthA];\r\n    }\r\n    getCustomerSummary(startOfMonth(monthA), endOfMonth(monthB));\r\n    getRiderSummary(startOfMonth(monthA), endOfMonth(monthB));\r\n  };\r\n\r\n  function checkdatanull() {\r\n    if ((customerSummary.customerorders) == null) {\r\n      return (\r\n        <Segment\r\n          textAlign='center'\r\n          basic\r\n          size='huge'\r\n          content=\"No data for this period\"\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        customerSummary.customerorders.map((value, index) => {\r\n          let image =\r\n            profileImages[Math.floor(Math.random() * profileImages.length)];\r\n          return (\r\n            <CustomerSummaryCard\r\n              key={index}\r\n              cid={value.cid}\r\n              name={value.name}\r\n              email={value.email}\r\n              ordercount={value.ordercount}\r\n              totalpayment={value.totalpayment}\r\n              image={image}\r\n            />\r\n          )\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  function checklocationdatanull() {\r\n    if ((customerSummary.orderlocations) == null) {\r\n      return (\r\n        <Segment\r\n          textAlign='center'\r\n          basic\r\n          size='huge'\r\n          content=\"No data for this period\"\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        customerSummary.orderlocations.map((value, index) => {\r\n          return (\r\n            <OrderSummaryCard\r\n              key={index}\r\n              location={value.location}\r\n              count={value.count}\r\n            />\r\n          )\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const goodcustomers = overviewSummary.goodcustomers;\r\n  const toplocations = overviewSummary.toplocations;\r\n  const topriders = overviewSummary.topriders;\r\n\r\n  const profileImages = [\r\n    \"elliot.jpg\",\r\n    \"helen.jpg\",\r\n    \"jenny.jpg\",\r\n    \"joe.jpg\",\r\n    \"justen.jpg\",\r\n    \"laura.jpg\",\r\n    \"steve.jpg\",\r\n    \"molly.png\",\r\n  ];\r\n\r\n  return (\r\n    <main className=\"manager-summary-page\">\r\n      <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\r\n      <Container>\r\n        <div style={{ display: \"flex\" }}>\r\n          <span style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n            <h2 style={{ marginInlineEnd: \"1rem\" }}>Summary for period</h2>\r\n            <MonthRangeInput\r\n              style={{ marginInlineEnd: \"5rem\" }}\r\n              className=\"rounded-input\"\r\n              clearable\r\n              placeholder=\"Select month(s)\"\r\n              popupPosition=\"bottom center\"\r\n              onChange={(event, data) => {\r\n                onMonthInput(data.value);\r\n              }}\r\n              dateFormat=\"MM/YYYY\"\r\n              value={selectedMonths}\r\n              maxDate={new Date()}\r\n              loading={loading1}\r\n              disabled={loading1}\r\n              closable />\r\n          </span>\r\n          <span>\r\n            <Button.Group>\r\n              <Button\r\n                color=\"purple\"\r\n                onClick={() => {\r\n                  setOverviewOn(true)\r\n                  setViewCustomerOn(false)\r\n                  setViewOrderOn(false)\r\n                  setViewRiderOn(false)\r\n                  setSelectedMonths(\"\")\r\n                  setPeriod([])\r\n                }}>\r\n                <Button.Content>Overview</Button.Content>\r\n              </Button>\r\n              <Button\r\n                color=\"purple\"\r\n                onClick={() => {\r\n                  setViewCustomerOn(true)\r\n                  setOverviewOn(false)\r\n                  setViewOrderOn(false)\r\n                  setViewRiderOn(false)\r\n                  setSelectedMonths(\"\")\r\n                  setPeriod([])\r\n                }}>\r\n                <Button.Content>View Customers</Button.Content>\r\n              </Button>\r\n              <Button\r\n                color=\"purple\"\r\n                onClick={() => {\r\n                  setViewOrderOn(true)\r\n                  setOverviewOn(false)\r\n                  setViewCustomerOn(false)\r\n                  setViewRiderOn(false)\r\n                  setSelectedMonths(\"\")\r\n                  setPeriod([])\r\n                }}>\r\n                <Button.Content>View Orders</Button.Content>\r\n              </Button>\r\n              <Button\r\n                color=\"purple\"\r\n                onClick={() => {\r\n                  setViewRiderOn(true)\r\n                  setOverviewOn(false)\r\n                  setViewCustomerOn(false)\r\n                  setViewOrderOn(false)\r\n                  setSelectedMonths(\"\")\r\n                  setPeriod([])\r\n                }}>\r\n                <Button.Content>View Riders</Button.Content>\r\n              </Button>\r\n            </Button.Group>\r\n          </span>\r\n        </div>\r\n\r\n        {period.length === 2 && overview ? (\r\n          <Container>\r\n            <h1>Overview</h1>\r\n            <Segment\r\n              basic\r\n              textAlign='center'\r\n              size='small'>\r\n              <h1>Start of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[0], \"MMM yyyy\")}</font> to End of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[1], \"MMM yyyy\")}</font></h1></Segment>\r\n            <Statistic.Group\r\n              widths=\"2\"\r\n              size=\"large\"\r\n              style={{ margin: \"3em 0 3em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total New Customers</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"user\" />\r\n                  {customerSummary.newcustomers}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Total New Orders</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"food\" />\r\n                  {customerSummary.ordercount}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n\r\n            <Statistic.Group\r\n              widths=\"2\"\r\n              size=\"large\"\r\n              style={{ margin: \"1em 0 1em 0\" }}\r\n            >\r\n              <Statistic>\r\n                <Statistic.Label>Total Completed Orders</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"food\" />\r\n                  {customerSummary.completedorders}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n\r\n              <Statistic>\r\n                <Statistic.Label>Total Cost of Completed Orders</Statistic.Label>\r\n                <Statistic.Value>\r\n                  <Icon name=\"dollar\" />\r\n                  {customerSummary.orderscost}\r\n                </Statistic.Value>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n          </Container>\r\n        ) : viewCustomers && period.length != 2 ? (\r\n          <Container>\r\n            <h1>Customer List</h1>\r\n            {loading ? (\r\n              <Loader active\r\n                size='large'>Loading</Loader>\r\n            ) : (\r\n                <>\r\n                  <Segment\r\n                    textAlign='center'\r\n                    basic\r\n                    size='huge'\r\n                    content=\"You have not selected a period\"\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Statistic.Group widths=\"1\" size=\"huge\">\r\n                    <Statistic>\r\n                      <Statistic.Label><font color=\"#643cc6\">Top 3 Customers</font></Statistic.Label>\r\n                    </Statistic>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                  </Statistic.Group>\r\n                  {goodcustomers && (\r\n                    <Statistic.Group widths={goodcustomers.length} size=\"small\">\r\n                      {goodcustomers.length >= 1 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{goodcustomers[0].name}</Statistic.Value>\r\n                          <Statistic.Value text>Customer ID: {\" \"}\r\n                            <font color=\"#643cc6\">{goodcustomers[0].cid}</font>\r\n                          </Statistic.Value>\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{goodcustomers[0].count}</font> {\" \"}Orders\r\n                          <br />\r\n                            <Icon name='dollar' />\r\n                            {goodcustomers[0].sum}\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n\r\n                      {goodcustomers.length >= 2 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{goodcustomers[1].name}</Statistic.Value>\r\n                          <Statistic.Value text>Customer ID: {\" \"}\r\n                            <font color=\"#643cc6\">{goodcustomers[1].cid}</font>\r\n                          </Statistic.Value>\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{goodcustomers[1].count}</font> {\" \"}Orders\r\n                          <br />\r\n                            <Icon name='dollar' />\r\n                            {goodcustomers[1].sum}\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n\r\n                      {goodcustomers.length >= 3 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{goodcustomers[2].name}</Statistic.Value>\r\n                          <Statistic.Value text>Customer ID: {\" \"}\r\n                            <font color=\"#643cc6\">{goodcustomers[2].cid}</font>\r\n                          </Statistic.Value>\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{goodcustomers[2].count}</font> {\" \"}Orders\r\n                          <br />\r\n                            <Icon name='dollar' />\r\n                            {goodcustomers[2].sum}\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n                    </Statistic.Group>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n          </Container>\r\n        ) : viewCustomers && period.length === 2 ? (\r\n          <Container>\r\n            <h1>Customer List</h1>\r\n            <Segment\r\n              basic\r\n              textAlign='center'\r\n              size='small'>\r\n              <h1>Start of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[0], \"MMM yyyy\")}</font> to End of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[1], \"MMM yyyy\")}</font></h1></Segment>\r\n            <Card.Group>\r\n              {checkdatanull()}\r\n            </Card.Group>\r\n          </Container>\r\n        ) : viewOrders && period.length != 2 ? (\r\n          <Container>\r\n            <h1>Order Location List</h1>\r\n            {loading ? (\r\n              <Loader active\r\n                size='large'>Loading</Loader>\r\n            ) : (\r\n                <>\r\n                  <Segment\r\n                    textAlign='center'\r\n                    basic\r\n                    size='huge'\r\n                    content=\"You have not selected a period\"\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Statistic.Group widths=\"1\" size=\"huge\">\r\n                    <Statistic>\r\n                      <Statistic.Label><font color=\"#643cc6\">Top 3 Locations</font></Statistic.Label>\r\n                    </Statistic>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                  </Statistic.Group>\r\n                  {toplocations && (\r\n                    <Statistic.Group widths={toplocations.length} size=\"small\">\r\n                      {toplocations.length >= 1 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{toplocations[0].location}</Statistic.Value>\r\n                          <br />\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{toplocations[0].count}</font>{\" \"}Orders\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n\r\n                      {toplocations.length >= 2 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{toplocations[1].location}</Statistic.Value>\r\n                          <br />\r\n                          <Statistic.Value text>\r\n                            <font color=\"#643cc6\">{toplocations[1].count}</font>{\" \"}Orders\r\n                          </Statistic.Value>\r\n                        </Statistic>\r\n                      )}\r\n\r\n                      {toplocations.length >= 3 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{toplocations[2].location}</Statistic.Value>\r\n                          <br />\r\n                          <Statistic.Value text>\r\n                            <font color=\"#643cc6\">{toplocations[2].count}</font>{\" \"}Orders\r\n                          </Statistic.Value>\r\n                        </Statistic>\r\n                      )}\r\n                    </Statistic.Group>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n          </Container>\r\n        ) : viewOrders && period.length === 2 ? (\r\n          <Container>\r\n            <h1>Order Location List</h1>\r\n            <Segment\r\n              basic\r\n              textAlign='center'\r\n              size='small'>\r\n              <h1>Start of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[0], \"MMM yyyy\")}</font> to End of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[1], \"MMM yyyy\")}</font></h1></Segment>\r\n            <Card.Group>\r\n              {checklocationdatanull()}\r\n            </Card.Group>\r\n          </Container>\r\n        ) : viewRiders && period.length != 2 ? (\r\n          <Container>\r\n            <h1>Rider List</h1>\r\n            {loading ? (\r\n              <Loader active\r\n                size='large'>Loading</Loader>\r\n            ) : (\r\n                <>\r\n                  <Segment\r\n                    textAlign='center'\r\n                    basic\r\n                    size='huge'\r\n                    content=\"You have not selected a period\"\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                  <Statistic.Group widths=\"1\" size=\"huge\">\r\n                    <Statistic>\r\n                      <Statistic.Label><font color=\"#643cc6\">Top 3 Riders</font></Statistic.Label>\r\n                    </Statistic>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                  </Statistic.Group>\r\n                  {topriders && (\r\n                    <Statistic.Group widths={topriders.length} size=\"small\">\r\n                      {topriders.length >= 1 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{topriders[0].name}</Statistic.Value>\r\n                          <Statistic.Value text>Rider ID: {\" \"}\r\n                            <font color=\"#643cc6\">{topriders[0].rid}</font>\r\n                          </Statistic.Value>\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{topriders[0].count}</font> {\" \"}Orders Delivered\r\n                          <br />\r\n                            <Icon name='motorcycle' />\r\n                            Average delivery time of{\" \"}\r\n                            <font color=\"#643cc6\">{parseFloat(topriders[0].avg).toFixed(2)}</font>{\" \"}mins\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n\r\n                      {topriders.length >= 2 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{topriders[1].name}</Statistic.Value>\r\n                          <Statistic.Value text>Rider ID: {\" \"}\r\n                            <font color=\"#643cc6\">{topriders[1].rid}</font>\r\n                          </Statistic.Value>\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{topriders[1].count}</font> {\" \"}Orders Delivered\r\n                          <br />\r\n                            <Icon name='motorcycle' />\r\n                            Average delivery time of{\" \"}\r\n                            <font color=\"#643cc6\">{parseFloat(topriders[1].avg).toFixed(2)}</font>{\" \"}mins\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n\r\n                      {topriders.length >= 3 && (\r\n                        <Statistic>\r\n                          <Statistic.Value>{topriders[2].name}</Statistic.Value>\r\n                          <Statistic.Value text>Rider ID: {\" \"}\r\n                            <font color=\"#643cc6\">{topriders[2].rid}</font>\r\n                          </Statistic.Value>\r\n                          <Statistic.Label>\r\n                            <font color=\"#643cc6\">{topriders[2].count}</font> {\" \"}Orders Delivered\r\n                          <br />\r\n                            <Icon name='motorcycle' />\r\n                            Average delivery time of{\" \"}\r\n                            <font color=\"#643cc6\">{((parseFloat(topriders[2].avg)) / 60).toFixed(2)}</font>{\" \"}mins\r\n                          </Statistic.Label>\r\n                        </Statistic>\r\n                      )}\r\n                    </Statistic.Group>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n          </Container>\r\n        ) : viewRiders && period.length === 2 ? (\r\n          <Container>\r\n            <h1>Rider List</h1>\r\n            <Segment\r\n              basic\r\n              textAlign='center'\r\n              size='small'>\r\n              <h1>Start of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[0], \"MMM yyyy\")}</font> to End of{\" \"}\r\n                <font color=\"#3445c3\">{format(period[1], \"MMM yyyy\")}</font></h1></Segment>\r\n            <Card.Group>\r\n              {riderSummary.map((value, index) => {\r\n                return (\r\n                  <RiderSummaryCard\r\n                    key={index}\r\n                    id={value.riderinfo.id}\r\n                    totalsalary={value.riderinfo.totalsalary}\r\n                    hours={value.riderinfo.hours}\r\n                    noorder={value.riderinfo.noorder}\r\n                    avgdelivertime={(parseFloat(value.riderinfo.avgdelivertime) / 60).toFixed(2)}\r\n                    norating={value.riderinfo.norating}\r\n                    avgrating={value.riderinfo.avgrating}\r\n                  />\r\n                )\r\n              })}\r\n            </Card.Group>\r\n          </Container>\r\n        ) : (\r\n                        <Container>\r\n                          <h1>Overview</h1>\r\n                          {loading ? (\r\n                            <Loader active\r\n                              size='large'>Loading</Loader>\r\n                          ) : (\r\n                              <>\r\n                                <Segment\r\n                                  textAlign='center'\r\n                                  basic\r\n                                  size='huge'\r\n                                  content=\"You have not selected a period\"\r\n                                />\r\n                                <Statistic.Group\r\n                                  widths=\"2\"\r\n                                  size=\"large\"\r\n                                  style={{ margin: \"3em 0 3em 0\" }}\r\n                                >\r\n                                  <Statistic>\r\n                                    <Statistic.Label>Total Customers</Statistic.Label>\r\n                                    <Statistic.Value>\r\n                                      <Icon name=\"user\" />\r\n                                      {overviewSummary.totalcustomers}\r\n                                    </Statistic.Value>\r\n                                  </Statistic>\r\n\r\n                                  <Statistic>\r\n                                    <Statistic.Label>Total Orders</Statistic.Label>\r\n                                    <Statistic.Value>\r\n                                      <Icon name=\"food\" />\r\n                                      {overviewSummary.totalorders}\r\n                                    </Statistic.Value>\r\n                                  </Statistic>\r\n                                </Statistic.Group>\r\n\r\n                                <Statistic.Group\r\n                                  widths=\"2\"\r\n                                  size=\"large\"\r\n                                  style={{ margin: \"1em 0 1em 0\" }}\r\n                                >\r\n                                  <Statistic>\r\n                                    <Statistic.Label>Total Completed Orders</Statistic.Label>\r\n                                    <Statistic.Value>\r\n                                      <Icon name=\"food\" />\r\n                                      {overviewSummary.totalcompletedorders}\r\n                                    </Statistic.Value>\r\n                                  </Statistic>\r\n\r\n                                  <Statistic>\r\n                                    <Statistic.Label>Total Cost of Completed Orders</Statistic.Label>\r\n                                    <Statistic.Value>\r\n                                      <Icon name=\"dollar\" />\r\n                                      {overviewSummary.totalcost}\r\n                                    </Statistic.Value>\r\n                                  </Statistic>\r\n                                </Statistic.Group>\r\n                              </>\r\n                            )}\r\n                        </Container>\r\n                      )\r\n        }\r\n      </Container >\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ManagerSummaryPage;\r\n","import React from \"react\";\nimport { Card, Label } from \"semantic-ui-react\";\nimport { format } from \"date-fns\";\n\nfunction PromotionCard(props) {\n  // const promo = props.promo\n\n  function checkTime() {\n    if (Date.now() - props.edatetime > 0) {\n      return 1;\n    } else if (Date.now() - props.sdatetime < 0) {\n      return 2;\n    } else {\n      return 0;\n    }\n  }\n\n  function getPromoStatus() {\n    switch (checkTime()) {\n      case 1:\n        return \"Expired\";\n      case 2:\n        return \"Upcoming\";\n      default:\n        return \"Ongoing\";\n    }\n  }\n\n  function getDescription() {\n    switch (props.discount) {\n      case 1:\n        return \"Free Delivery\";\n      default:\n        return (props.discount * 100).toPrecision(2) + \"% discount\";\n    }\n  }\n\n  return (\n    <Card fluid raised color={\"purple\"}>\n      <Card.Content>\n        <Card.Header\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Promotion ID: {props.pid}\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Card.Description>\n          <div style={{ fontWeight: \"bold\" }}>\n            Start: {format(props.sdatetime, \"dd/MM/yyyy hh:mm aa \")}\n            <br />\n            End: {format(props.edatetime, \" dd/MM/yyyy hh:mm aa\")}\n          </div>\n          <span>\n            {\n              <Label\n                color={\n                  checkTime() === 1\n                    ? \"red\"\n                    : checkTime() === 2\n                      ? \"grey\"\n                      : \"green\"\n                }\n                style={{ marginLeft: \"1000px\" }}\n              >\n                {getPromoStatus()}\n              </Label>\n            }\n          </span>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            Promotion details: {getDescription()}\n          </div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default PromotionCard;\n","import Axios from \"axios\";\n\nfunction SavePromotion(value1, value2, value3, setCreateError, setCreateSuccessfully) {\n    const url = `http://localhost:5000/api/promotions`\n    return Axios.post(url, {\n        sdatetime: value1,\n        edatetime: value2,\n        discount: value3\n    })\n        .then(response => {\n            console.log(\"response\", response.data)\n            setCreateError(false)\n            setCreateSuccessfully(true)\n        })\n        .catch(error => {\n            console.log(\"Error creating promotion:\", error)\n            setCreateError(true)\n            setCreateSuccessfully(false)\n        })\n}\n\nexport default SavePromotion;","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Modal,\n  Message,\n  Radio,\n  Checkbox,\n} from \"semantic-ui-react\";\nimport SavePromotion from \"components/managers/SavePromotion\";\n\nfunction CreatePromotionButton() {\n  const [isModalOpened, setModalOpened] = useState(false);\n  const [startdate, setStartdate] = useState(\"\");\n  const [enddate, setEnddate] = useState(\"\");\n  const [discount, setDiscount] = useState(\"\");\n  const [didCreateSuccessfully, setCreateSuccessfully] = useState(false);\n  const [createError, setCreateError] = useState(false);\n  const [toggle, setToggle] = useState(1);\n  const [isChecked, setChecked] = useState(false);\n\n  var finalDiscount = discount / 100;\n  var epochStartDate = new Date(startdate.toString()).getTime();\n  var epochEndDate = new Date(enddate.toString()).getTime();\n\n  function toggleCheckBox() {\n    switch (toggle) {\n      case 0:\n        setDiscount(\"\");\n        return false;\n      case 1:\n        setDiscount(100);\n        return true;\n    }\n  }\n\n  return (\n    <Modal\n      size=\"small\"\n      open={isModalOpened}\n      onClose={() => setModalOpened(false)}\n      trigger={\n        <Button\n          // animated=\"vertical\"\n          color=\"teal\"\n          // disabled={Object.keys(props.selectedFoodItems).length === 0}\n          onClick={() => setModalOpened(true)}\n        >\n          <Button.Content>Create New promotion</Button.Content>\n        </Button>\n      }\n    >\n      <Modal.Header>Create New Promotion</Modal.Header>\n\n      <Modal.Content>\n        <Modal.Description>\n          <Form>\n            <Form.Input\n              label=\"Start Date (format: MM/dd/yyyy hh:mm aa)\"\n              value={startdate}\n              onChange={(event, data) => {\n                setStartdate(data.value);\n              }}\n            />\n            <Form.Input\n              label=\"End Date (format: MM/dd/yyyy hh:mm aa)\"\n              value={enddate}\n              onChange={(event, data) => {\n                setEnddate(data.value);\n              }}\n            />\n            <Form.Input\n              label=\"Discount (eg. input 50 for 50% off)\"\n              value={discount}\n              onChange={(event, data) => {\n                console.log(data.value);\n                setDiscount(data.value);\n              }}\n            />\n            <Form.Checkbox\n              label=\"Free Delivery Promotion\"\n              onChange={(event, data) => {\n                setChecked(toggleCheckBox());\n                setToggle(Math.abs(toggle - 1));\n              }}\n              checked={isChecked}\n            />\n          </Form>\n\n          {didCreateSuccessfully && (\n            <Message\n              success\n              header=\"Promotion created successfully\"\n              content=\"You may close the form\"\n            />\n          )}\n\n          {createError && (\n            <Message\n              error\n              header=\"Invalid input\"\n              content=\"Please follow the format for each field\"\n            />\n          )}\n        </Modal.Description>\n      </Modal.Content>\n\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          content=\"Cancel\"\n          onClick={() => {\n            setModalOpened(false);\n            setCreateSuccessfully(false);\n            setCreateError(false);\n            setDiscount(\"\");\n            setStartdate(\"\");\n            setEnddate(\"\");\n          }}\n        />\n        <Button\n          color=\"blue\"\n          content=\"Create\"\n          onClick={() => {\n            SavePromotion(\n              epochStartDate / 1000,\n              epochEndDate / 1000,\n              finalDiscount,\n              setCreateError,\n              setCreateSuccessfully\n            );\n          }}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default CreatePromotionButton;\n","import React, { useState, useEffect } from \"react\";\nimport { Menu, Container, Card, Button } from \"semantic-ui-react\";\nimport { MonthRangeInput } from \"semantic-ui-calendar-react\";\nimport AllPromotionCard from \"components/managers/AllPromotionCard\";\nimport CreatePromotionButton from \"components/managers/CreatePromotionButton\";\nimport { parse, isBefore, format } from \"date-fns\";\nimport Axios from \"axios\";\n\nfunction ManagerPromotionPage() {\n    const [selectedMonths, setSelectedMonths] = useState(\"\");\n    const [promotionsData, setPromotionData] = useState([]);\n\n    const getPeriod = selectedMonths => {\n        let period = selectedMonths.split(\" - \");\n        console.log(period);\n        if (period.length < 2 || period[0] === \"\" || period[1] === \"\") {\n            console.log(\"period invalid\");\n            return [];\n        }\n        let monthA = parse(period[0], \"MM/yyyy\", new Date());\n        let monthB = parse(period[1], \"MM/yyyy\", new Date());\n\n        if (isBefore(monthB, monthA)) {\n            [monthA, monthB] = [monthB, monthA];\n        }\n\n        return [monthA, monthB];\n    };\n\n    const period = getPeriod(selectedMonths);\n    const url = `http://localhost:5000/api/promotions`\n    useEffect(() => {\n        Axios.get(url)\n            .then(response => {\n                console.log(\"response\", response.data)\n                setPromotionData(response.data)\n            })\n            .catch(error => {\n                console.log(\"Error retrieving promotions:\", error);\n            })\n    }, [])\n\n    return (\n        <main className=\"manager-promotion-page\">\n            <Menu size=\"huge\" style={{ opacity: 0 }}></Menu>\n            <Container>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <span style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                        <h2 style={{ marginInlineEnd: \"1rem\" }}>View Promotions for period</h2>\n                        <MonthRangeInput\n                            className=\"rounded-input\"\n                            clearable\n                            placeholder=\"Select month(s)\"\n                            popupPosition=\"bottom center\"\n                            onChange={(event, data) => {\n                                setSelectedMonths(data.value);\n                            }}\n                            dateFormat=\"MM/YYYY\"\n                            value={selectedMonths}\n                            closable\n                        // maxDate={new Date()}\n                        />\n                    </span>\n                    <span>\n                        <Button.Group>\n                            <CreatePromotionButton\n                            />\n                        </Button.Group>\n                    </span>\n                </div>\n                {period.length > 0 ? (\n                    <Container>\n                        <Card.Group>\n                            {promotionsData.filter(date => date.promo.sdatetime * 1000 >= new Date(period[0].toString()).getTime() &&\n                                date.promo.sdatetime * 1000 <= new Date(period[1].toString()).getTime())\n                                .map((value, index) => {\n                                    return (\n                                        <AllPromotionCard\n                                            key={index}\n                                            pid={value.promo.pid}\n                                            edatetime={value.promo.edatetime * 1000}\n                                            sdatetime={value.promo.sdatetime * 1000}\n                                            discount={value.promo.discount}\n                                        />\n                                    )\n                                })}\n                        </Card.Group>\n                    </Container>\n                ) : (\n                        <Container>\n                            <Card.Group>\n                                {promotionsData.map((value, index) => {\n                                    return (\n                                        <AllPromotionCard\n                                            key={index}\n                                            // promo={value.promo}\n                                            pid={value.promo.pid}\n                                            edatetime={value.promo.edatetime * 1000}\n                                            sdatetime={value.promo.sdatetime * 1000}\n                                            discount={value.promo.discount}\n                                        />\n                                    );\n                                })}\n                            </Card.Group>\n                        </Container>\n                    )\n                }\n            </Container >\n        </main >\n    );\n}\n\nexport default ManagerPromotionPage;","import React, { useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  Segment,\n  Icon,\n  Form,\n  Header,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { CUSTOMER, STAFF, RIDER, MANAGER } from \"utils/Constants\";\n\nfunction LoginPage(props) {\n  const [signingUp, setSigningUp] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newRole, setNewRole] = useState(CUSTOMER);\n  const [riderType, setRiderType] = useState(0);\n  const [restaurant, setRestaurant] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onLogin = () => {\n    console.log(\"logging in\");\n    setLoading(true);\n    axios\n      .get(`http://localhost:5000/api/users/login?email=${email}`)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 200) {\n          let { id, role, name, email } = response.data;\n          props.login(id, role, name, email);\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n      });\n  };\n\n  const onSignUp = () => {\n    var postRequest;\n    console.log(\"signing up\");\n    setLoading(true);\n    switch (newRole) {\n      case CUSTOMER:\n        postRequest = axios.post(\"http://localhost:5000/api/customers\", {\n          name: name,\n          email: newEmail,\n        });\n        break;\n      case STAFF:\n        postRequest = axios.post(\"http://localhost:5000/api/staffs\", {\n          name: name,\n          email: newEmail,\n          rname: restaurant,\n        });\n        break;\n      case RIDER:\n        postRequest = axios.post(\"http://localhost:5000/api/riders\", {\n          name: name,\n          email: newEmail,\n          isFT: riderType,\n        });\n        break;\n      case MANAGER:\n        postRequest = axios.post(\"http://localhost:5000/api/managers\", {\n          name: name,\n          email: newEmail,\n        });\n        break;\n      default:\n        console.log(\"Unknown role\");\n        return;\n    }\n\n    postRequest\n      .then((response) => {\n        if (response.status === 200) {\n          toggleRegister();\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n      });\n  };\n\n  const isInvalid = () => {\n    return (\n      signingUp &&\n      (!name || !newEmail || !password || (newRole === STAFF && !restaurant))\n    );\n  };\n\n  const toggleRegister = () => {\n    setSigningUp(!signingUp);\n    setName(\"\");\n    setEmail(\"\");\n    setNewEmail(\"\");\n    setPassword(\"\");\n    setRiderType(0);\n    setNewRole(CUSTOMER);\n    setRestaurant(\"\");\n  };\n\n  return (\n    <main className=\"login-page\" style={{ height: \"100vh\", overflow: \"auto\" }}>\n      <Container>\n        <Grid\n          style={{ height: \"100vh\" }}\n          textAlign=\"center\"\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column>\n            <Segment raised placeholder size=\"massive\">\n              <Grid columns={2} relaxed=\"very\" stackable>\n                <Grid.Column verticalAlign=\"middle\">\n                  <Form>\n                    <Header>{signingUp ? \"Sign up\" : \"Sign in\"}</Header>\n                    {signingUp && (\n                      <Form.Input\n                        icon=\"user\"\n                        iconPosition=\"left\"\n                        placeholder=\"Name\"\n                        onChange={(event, data) => setName(data.value)}\n                        value={name}\n                      />\n                    )}\n                    <Form.Input\n                      icon=\"mail\"\n                      iconPosition=\"left\"\n                      placeholder=\"Email\"\n                      onChange={(event, data) => {\n                        signingUp\n                          ? setNewEmail(data.value)\n                          : setEmail(data.value);\n                      }}\n                      value={signingUp ? newEmail : email}\n                      type=\"email\"\n                    />\n                    <Form.Input\n                      icon=\"lock\"\n                      iconPosition=\"left\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      onChange={(event, data) => setPassword(data.value)}\n                      value={password}\n                    />\n                    {signingUp && (\n                      <Form.Group inline widths={4}>\n                        <Form.Radio\n                          label=\"Customer\"\n                          value={CUSTOMER}\n                          checked={newRole === CUSTOMER}\n                          onChange={(event, data) => setNewRole(data.value)}\n                        />\n                        <Form.Radio\n                          label=\"Staff\"\n                          value={STAFF}\n                          checked={newRole === STAFF}\n                          onChange={(event, data) => setNewRole(data.value)}\n                        />\n                        <Form.Radio\n                          label=\"Rider\"\n                          value={RIDER}\n                          checked={newRole === RIDER}\n                          onChange={(event, data) => setNewRole(data.value)}\n                        />\n                        <Form.Radio\n                          label=\"Manager\"\n                          value={MANAGER}\n                          checked={newRole === MANAGER}\n                          onChange={(event, data) => setNewRole(data.value)}\n                        />\n                      </Form.Group>\n                    )}\n                    {signingUp && newRole === RIDER && (\n                      <Form.Group inline widths={2}>\n                        <Form.Radio\n                          label=\"Part-Time\"\n                          value={0}\n                          checked={riderType === 0}\n                          onChange={(event, data) => setRiderType(data.value)}\n                        />\n                        <Form.Radio\n                          label=\"Full-Time\"\n                          value={1}\n                          checked={riderType === 1}\n                          onChange={(event, data) => setRiderType(data.value)}\n                        />\n                      </Form.Group>\n                    )}\n                    {signingUp && newRole === STAFF && (\n                      <Form.Input\n                        icon=\"food\"\n                        iconPosition=\"left\"\n                        placeholder=\"Restaurant\"\n                        value={restaurant}\n                        onChange={(event, data) => setRestaurant(data.value)}\n                      />\n                    )}\n                    <Form.Button\n                      content={signingUp ? \"Sign up\" : \"Login\"}\n                      primary\n                      fluid\n                      disabled={isInvalid()}\n                      loading={loading}\n                      onClick={signingUp ? onSignUp : onLogin}\n                    />\n                    <Form.Button\n                      content={signingUp ? \"Back\" : \"Register\"}\n                      secondary\n                      fluid\n                      onClick={toggleRegister}\n                    />\n                  </Form>\n                </Grid.Column>\n                <Grid.Column verticalAlign=\"middle\">\n                  <Icon name=\"truck\" size=\"massive\" />\n                  <h1 style={{ fontSize: \"3rem\" }}>Food Truck</h1>\n                </Grid.Column>\n              </Grid>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n      <br />\n      <br />\n      <br />\n    </main>\n  );\n}\n\nexport default LoginPage;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport NavigationContainer from \"./components/navigation/NavigationContainer\";\r\nimport {\r\n  HOME_PATH,\r\n  HISTORY_PATH,\r\n  PROFILE_PATH,\r\n  RIDER_ACTIVITY_PATH,\r\n  RIDER_SUMMARY_PATH,\r\n  STAFF_MENU_PATH,\r\n  STAFF_SUMMARY_PATH,\r\n  MANAGER_SUMMARY_PATH,\r\n  MANAGER_PROMOTION_PATH,\r\n  ROOT_PATH,\r\n  CUSTOMER,\r\n  RIDER,\r\n  STAFF,\r\n  MANAGER,\r\n} from \"./utils/Constants\";\r\nimport WelcomePage from \"./components/pages/WelcomePage\";\r\nimport Homepage from \"./components/pages/Homepage\";\r\nimport HistoryPage from \"./components/pages/HistoryPage\";\r\nimport ProfilePage from \"./components/pages/ProfilePage\";\r\nimport RiderActivityPage from \"./components/pages/RiderActivityPage\";\r\nimport RiderSummaryPage from \"./components/pages/RiderSummaryPage\";\r\nimport StaffSummaryPage from \"./components/pages/StaffSummaryPage\";\r\nimport StaffMenuPage from \"./components/pages/StaffMenuPage\";\r\nimport ManagerSummaryPage from \"./components/pages/ManagerSummaryPage\";\r\nimport ManagerPromotionPage from \"./components/pages/ManagerPromotionPage\";\r\nimport UserContext from \"utils/UserContext\";\r\nimport LoginPage from \"components/pages/LoginPage\";\r\n\r\nfunction App() {\r\n  const [uid, setUid] = useState();\r\n  const [role, setRole] = useState();\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n\r\n  const signOut = () => {\r\n    localStorage.clear();\r\n    loadFromLocalStorage();\r\n  };\r\n\r\n  const login = (uid, role, name, email) => {\r\n    localStorage.setItem(\"uid\", uid);\r\n    localStorage.setItem(\"role\", role);\r\n    localStorage.setItem(\"name\", name);\r\n    localStorage.setItem(\"email\", email);\r\n    loadFromLocalStorage();\r\n  };\r\n\r\n  const loadFromLocalStorage = () => {\r\n    setUid(parseInt(localStorage.getItem(\"uid\")));\r\n    setRole(parseInt(localStorage.getItem(\"role\")));\r\n    setName(localStorage.getItem(\"name\"));\r\n    setEmail(localStorage.getItem(\"email\"));\r\n  };\r\n\r\n  useEffect(loadFromLocalStorage, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {uid && role >= 0 && name && email ? (\r\n          <UserContext.Provider\r\n            value={{\r\n              uid: uid,\r\n              role: role,\r\n              name: name,\r\n              email: email,\r\n              reload: loadFromLocalStorage,\r\n            }}\r\n          >\r\n            <NavigationContainer signOut={signOut}>\r\n              <Switch>\r\n                <Route path={ROOT_PATH} exact component={WelcomePage} />\r\n                {role === CUSTOMER && (\r\n                  <Route path={HOME_PATH} exact component={Homepage} />\r\n                )}\r\n                {role === CUSTOMER && (\r\n                  <Route path={HISTORY_PATH} exact component={HistoryPage} />\r\n                )}\r\n                <Route path={PROFILE_PATH} exact component={ProfilePage} />\r\n                {role === RIDER && (\r\n                  <Route\r\n                    path={RIDER_ACTIVITY_PATH}\r\n                    exact\r\n                    component={RiderActivityPage}\r\n                  />\r\n                )}\r\n                {role === RIDER && (\r\n                  <Route\r\n                    path={RIDER_SUMMARY_PATH}\r\n                    exact\r\n                    component={RiderSummaryPage}\r\n                  />\r\n                )}\r\n                {role === STAFF && (\r\n                  <Route\r\n                    path={STAFF_SUMMARY_PATH}\r\n                    exact\r\n                    component={StaffSummaryPage}\r\n                  />\r\n                )}\r\n                {role === STAFF && (\r\n                  <Route\r\n                    path={STAFF_MENU_PATH}\r\n                    exact\r\n                    component={StaffMenuPage}\r\n                  />\r\n                )}\r\n                {role === MANAGER && (\r\n                  <Route\r\n                    path={MANAGER_SUMMARY_PATH}\r\n                    exact\r\n                    component={ManagerSummaryPage}\r\n                  />\r\n                )}\r\n                {role === MANAGER && (\r\n                  <Route\r\n                    path={MANAGER_PROMOTION_PATH}\r\n                    exact\r\n                    component={ManagerPromotionPage}\r\n                  />\r\n                )}\r\n                <Route>\r\n                  <Redirect to={ROOT_PATH} />\r\n                </Route>\r\n              </Switch>\r\n            </NavigationContainer>\r\n          </UserContext.Provider>\r\n        ) : (\r\n            <Switch>\r\n              <Route\r\n                path={ROOT_PATH}\r\n                exact\r\n                render={(props) => <LoginPage {...props} login={login} />}\r\n              />\r\n              <Route>\r\n                <Redirect to={ROOT_PATH} />\r\n              </Route>\r\n            </Switch>\r\n          )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}